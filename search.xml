<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>KMP 适配 android ios 沉浸式状态栏</title>
      <link href="/2024/109a48dbf2.html"/>
      <url>/2024/109a48dbf2.html</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p> 在KMP项目中，需要适配android和ios的沉浸式状态栏 适配需要解决几个问题</p><ol><li>绘制区域 在安卓中有<code>普通绘制区域</code> 和 <code>系统绘制区域</code> 两种 系统绘制区域包括<br><code>状态栏</code> 和 <code>导航栏</code> 在ios上主要处理状态栏 默认情况下是不会绘制到状态栏 和 导航栏的 所以我们首先要让画面绘制延伸到状态栏和导航栏</li><li>延伸之后 文字等组件可能显示在状态栏之上 我们需要调整边距使得组件正常显示，但是某些时候我们又需要让组件显示在状态栏之下，比如<br>播放器画面这个场景，所以需要根据实际业务调整。</li><li>除了调整边距之外，还需要适配 light 和 dark主题下 背景颜色下 状态栏文字颜色是否可见以及某些情况下是否隐藏状态栏。</li></ol><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="1-绘制区域"><a href="#1-绘制区域" class="headerlink" title="1. 绘制区域"></a>1. 绘制区域</h3><h4 id="安卓"><a href="#安卓" class="headerlink" title="安卓"></a>安卓</h4><p>在安卓中，我们可以通过设置<code>enableEdgeToEdge()</code>来实现绘制区域的调整</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">ComponentActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span>        <span class="token comment">// 使得绘制区域延伸到屏幕边缘 包括 statusBar 和 navigationBar</span>        <span class="token function">enableEdgeToEdge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// 设置内容</span>        setContent <span class="token punctuation">&#123;</span>            <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ios"><a href="#ios" class="headerlink" title="ios"></a>ios</h4><p>在ios中，我们可以通过设置<code>.ignoresSafeArea(edges: .all)</code>来实现绘制区域的调整<br>该文件默认为<code>ContentView.swift</code></p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">UIKit</span><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">import</span> <span class="token class-name">ComposeApp</span><span class="token keyword">struct</span> <span class="token class-name">ComposeView</span><span class="token punctuation">:</span> <span class="token class-name">UIViewControllerRepresentable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">makeUIViewController</span><span class="token punctuation">(</span>context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">UIViewController</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">MainViewControllerKt</span><span class="token punctuation">.</span><span class="token class-name">MainViewController</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">updateUIViewController</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> uiViewController<span class="token punctuation">:</span> <span class="token class-name">UIViewController</span><span class="token punctuation">,</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ComposeView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span>edges<span class="token punctuation">:</span> <span class="token punctuation">.</span>all<span class="token punctuation">)</span> <span class="token comment">// 使得内容扩充到状态栏</span>                <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">.</span>keyboard<span class="token punctuation">)</span> <span class="token comment">// Compose has own keyboard handler</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-调整边距"><a href="#2-调整边距" class="headerlink" title="2. 调整边距"></a>2. 调整边距</h3><h4 id="安卓-IOS"><a href="#安卓-IOS" class="headerlink" title="安卓 IOS"></a>安卓 IOS</h4><p>因为我用的是KMP Compose material3组件中提供了<code>Scaffold</code>组件，我们可以通过设置<code>paddingValues</code>来调整边距</p><blockquote><p>Scaffold 的content 中传入的innerPadding会自动计算状态栏高度。</p></blockquote><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token function">Scaffold</span><span class="token punctuation">(</span>    topBar <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token function">TopAppBar</span><span class="token punctuation">(</span>            title <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token function">Text</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"ComposeApp"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            backgroundColor <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>colors<span class="token punctuation">.</span>primary<span class="token punctuation">,</span>            contentColor <span class="token operator">=</span> Color<span class="token punctuation">.</span>White<span class="token punctuation">,</span>            elevation <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">.</span>dp        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    content <span class="token operator">=</span> <span class="token punctuation">&#123;</span> innerPadding<span class="token operator">-></span>        <span class="token comment">// 设置paddingValues</span>        <span class="token function">Column</span><span class="token punctuation">(</span>            modifier <span class="token operator">=</span> Modifier<span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span>innerPadding<span class="token punctuation">)</span>        <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 设置内容</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>如果想要让组件显示在状态栏之下，可以通过设置传入一个自定义的空的WindowInsets来实现 传给<br><code>contentWindowInsets</code>即可 </p></blockquote><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token annotation builtin">@Composable</span><span class="token keyword">fun</span> <span class="token function">Scaffold</span><span class="token punctuation">(</span>    modifier<span class="token operator">:</span> Modifier <span class="token operator">=</span> Modifier<span class="token punctuation">,</span>    topBar<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> Unit <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    bottomBar<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> Unit <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    snackbarHost<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> Unit <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    floatingActionButton<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> Unit <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    floatingActionButtonPosition<span class="token operator">:</span> FabPosition <span class="token operator">=</span> FabPosition<span class="token punctuation">.</span>End<span class="token punctuation">,</span>    containerColor<span class="token operator">:</span> Color <span class="token operator">=</span> MaterialTheme<span class="token punctuation">.</span>colorScheme<span class="token punctuation">.</span>background<span class="token punctuation">,</span>    contentColor<span class="token operator">:</span> Color <span class="token operator">=</span> <span class="token function">contentColorFor</span><span class="token punctuation">(</span>containerColor<span class="token punctuation">)</span><span class="token punctuation">,</span>    contentWindowInsets<span class="token operator">:</span> WindowInsets <span class="token operator">=</span> ScaffoldDefaults<span class="token punctuation">.</span>contentWindowInsets<span class="token punctuation">,</span>    content<span class="token operator">:</span> <span class="token annotation builtin">@Composable</span> <span class="token punctuation">(</span>PaddingValues<span class="token punctuation">)</span> <span class="token operator">-></span> Unit<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/2024-10-17-KMP%E9%80%82%E9%85%8D%20android%20ios%20%E6%B2%89%E6%B5%B8%E5%BC%8F%E7%8A%B6%E6%80%81%E6%A0%8F_1.png" alt="深色模式下适配情况"></p><h3 id="3-适配-light-和-dark主题下-背景颜色下-状态栏文字颜色是否可见"><a href="#3-适配-light-和-dark主题下-背景颜色下-状态栏文字颜色是否可见" class="headerlink" title="3. 适配 light 和 dark主题下 背景颜色下 状态栏文字颜色是否可见"></a>3. 适配 light 和 dark主题下 背景颜色下 状态栏文字颜色是否可见</h3><blockquote><p>还没做</p></blockquote><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol><li><a href="https://juejin.cn/post/7373860164557209634#heading-2">Jetpack Compose System UI 兼容以及沉浸式状态栏</a></li><li><a href="https://stackoverflow.com/questions/78190854/status-bar-color-change-in-compose-multiplatform">Status Bar Color Change in Compose Multiplatform</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> KMP开发填坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android studio </tag>
            
            <tag> kotlin multiplatform </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑苹果启动安卓虚拟机失败解决办法</title>
      <link href="/2024/102ce92906.html"/>
      <url>/2024/102ce92906.html</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><blockquote><p>在黑苹果中安装了Android Studio，并且安装好了android sdk 以及相关tools，但是启动安卓虚拟机失败。</p></blockquote><h2 id="具体表现"><a href="#具体表现" class="headerlink" title="具体表现"></a>具体表现</h2><ul><li>卡在connecting emulator 转圈</li><li>x86的镜像可以正常启动</li><li>x86_64的镜像卡在connecting emulator 转圈</li><li>但是安卓11以上版本就没有x86的镜像了，只有x86_64的镜像<br><img src="/../images/2024-10-15-%E9%BB%91%E8%8B%B9%E6%9E%9C%E5%90%AF%E5%8A%A8%E5%AE%89%E5%8D%93%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95_1.png" alt="图1"><br><img src="/../images/2024-10-15-%E9%BB%91%E8%8B%B9%E6%9E%9C%E5%90%AF%E5%8A%A8%E5%AE%89%E5%8D%93%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%A4%B1%E8%B4%A5%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95_2.png" alt="图2"></li></ul><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="1-打开终端，输入以下命令"><a href="#1-打开终端，输入以下命令" class="headerlink" title="1.打开终端，输入以下命令"></a>1.打开终端，输入以下命令</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/Library/LaunchAgents<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-检查当前目录下是否有-emulatorfix-plist文件-没有则创建"><a href="#2-检查当前目录下是否有-emulatorfix-plist文件-没有则创建" class="headerlink" title="2.检查当前目录下是否有 emulatorfix.plist文件 没有则创建"></a>2.检查当前目录下是否有 emulatorfix.plist文件 没有则创建</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">touch</span> emulatorfix.plist<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-编辑文件-使用vim打开文件-粘贴以下内容"><a href="#3-编辑文件-使用vim打开文件-粘贴以下内容" class="headerlink" title="3.编辑文件 使用vim打开文件 粘贴以下内容"></a>3.编辑文件 使用vim打开文件 粘贴以下内容</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">plist</span> <span class="token name">PUBLIC</span> <span class="token string">"-//Apple//DTD PLIST 1.0//EN"</span> <span class="token string">"http://www.apple.com/DTDs/PropertyList-1.0.dtd"</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plist</span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dict</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">></span></span>Label<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>launched.emulatorfix<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">></span></span>ProgramArguments<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>array</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>sh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>-c<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span><span class="token punctuation">></span></span>launchctl setenv studio.emu.params -qemu,-append,clearcpuid=517<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>array</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>key</span><span class="token punctuation">></span></span>RunAtLoad<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>key</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>true</span><span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dict</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plist</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-保存退出-按esc-输入-wq-保存退出vim编辑器"><a href="#4-保存退出-按esc-输入-wq-保存退出vim编辑器" class="headerlink" title="4.保存退出 按esc 输入:wq 保存退出vim编辑器"></a>4.保存退出 按esc 输入:wq 保存退出vim编辑器</h3><h3 id="5-重启系统-再打开Android-Studio-打开模拟器-即可打开"><a href="#5-重启系统-再打开Android-Studio-打开模拟器-即可打开" class="headerlink" title="5.重启系统 再打开Android Studio 打开模拟器 即可打开"></a>5.重启系统 再打开Android Studio 打开模拟器 即可打开</h3><blockquote><p>如果不想重启系统 可以在终端输入以下命令 之后重启Android Studio即可</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">launchctl load ~/Library/LaunchAgents/emulatorfix.plist<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://https//www.reddit.com/r/hackintosh/comments/183oe42/solved_run_android_emulator_in_intel_hackintosh/">https://www.reddit.com/r/hackintosh/comments/183oe42/solved_run_android_emulator_in_intel_hackintosh&#x2F;</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 开发工具配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑苹果 </tag>
            
            <tag> android studio </tag>
            
            <tag> 安卓虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pyqt的gridlayout实现动态排列</title>
      <link href="/2024/107fa7653f.html"/>
      <url>/2024/107fa7653f.html</url>
      
        <content type="html"><![CDATA[<h1 id="业务场景"><a href="#业务场景" class="headerlink" title="业务场景"></a>业务场景</h1><blockquote><p>gridlayout不是固定的布局内容 内容数量也不固定 但是又要铺满整个布局 当内容数量变化的时候 需要重新计算每个item的宽高 使得尽量铺满整个布局 同时又要保证每个item的大小相同 </p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">reLayoutSpectrum</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 设置可见性</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>channel_count<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token keyword">not</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>visible_leads<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>spectrumPlots<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>setVisible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>spectrumPlots<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>setVisible<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token comment"># 清空布局</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">reversed</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>spectrumLayout<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        widget <span class="token operator">=</span> self<span class="token punctuation">.</span>spectrumLayout<span class="token punctuation">.</span>itemAt<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>widget<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>spectrumLayout<span class="token punctuation">.</span>removeWidget<span class="token punctuation">(</span>widget<span class="token punctuation">)</span>        <span class="token keyword">if</span> widget <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            widget<span class="token punctuation">.</span>setParent<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span>  <span class="token comment"># 从布局中移除</span>    <span class="token comment"># 把所有行和列的拉伸因子设置为0 清空！</span>    <span class="token keyword">for</span> row <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>spectrumLayout<span class="token punctuation">.</span>rowCount<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>spectrumLayout<span class="token punctuation">.</span>setRowStretch<span class="token punctuation">(</span>row<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> col <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>spectrumLayout<span class="token punctuation">.</span>columnCount<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>spectrumLayout<span class="token punctuation">.</span>setColumnStretch<span class="token punctuation">(</span>col<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    rows<span class="token punctuation">,</span> cols <span class="token operator">=</span> self<span class="token punctuation">.</span>calculateGrid<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">for</span> index<span class="token punctuation">,</span> plotIndex <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>visible_leads<span class="token punctuation">)</span><span class="token punctuation">:</span>        row <span class="token operator">=</span> index <span class="token operator">//</span> cols        col <span class="token operator">=</span> index <span class="token operator">%</span> cols        <span class="token comment"># 设置每个导联的高度</span>        self<span class="token punctuation">.</span>spectrumLayout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>spectrumPlots<span class="token punctuation">[</span>plotIndex<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> row<span class="token punctuation">,</span> col<span class="token punctuation">)</span>    <span class="token comment"># 设置行和列的拉伸因子以确保所有行和列的高度和宽度相等</span>    <span class="token keyword">for</span> row <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>spectrumLayout<span class="token punctuation">.</span>setRowStretch<span class="token punctuation">(</span>row<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> col <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>cols<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>spectrumLayout<span class="token punctuation">.</span>setColumnStretch<span class="token punctuation">(</span>col<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> pyqt </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pyqt </tag>
            
            <tag> gridlayout </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSE协议</title>
      <link href="/2024/077c920109.html"/>
      <url>/2024/077c920109.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AndroidWIFI调试</title>
      <link href="/2024/05b955d270.html"/>
      <url>/2024/05b955d270.html</url>
      
        <content type="html"><![CDATA[<h1 id="版本要求"><a href="#版本要求" class="headerlink" title="版本要求"></a>版本要求</h1><blockquote><p>真机要求安卓11及以上</p></blockquote><h1 id="android抽风扫码连接不上的问题"><a href="#android抽风扫码连接不上的问题" class="headerlink" title="android抽风扫码连接不上的问题"></a>android抽风扫码连接不上的问题</h1><ul><li>打开开发者模式 无线调试点进去</li><li>找到对应的配对码 和ip地址和端口<pre class="line-numbers language-none"><code class="language-none">adb pair &lt;ip&gt;:&lt;port&gt;&#x2F;&#x2F;连接后会让你输入配对码Enter paring code: &#x2F;&#x2F;输入手机上的配对码即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>配对成功后 找到无线调试的ip地址和端口<code>注意和配对的ip和端口区分</code><pre class="line-numbers language-none"><code class="language-none">adb connect &lt;ip&gt;:&lt;port&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>即可连接成功</li></ul>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DialogFragment+ViewBinding简单封装</title>
      <link href="/2023/02c05e635b.html"/>
      <url>/2023/02c05e635b.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>fruitgame<span class="token punctuation">.</span>gambase<span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>LayoutInflater<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>View<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>ViewGroup<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>WindowManager<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>LayoutRes<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>DataBindingUtil<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>fragment<span class="token punctuation">.</span>app<span class="token punctuation">.</span>DialogFragment<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>viewbinding<span class="token punctuation">.</span>ViewBinding<span class="token keyword">abstract</span> <span class="token keyword">class</span> BaseDialogFragment<span class="token operator">&lt;</span>VB<span class="token operator">:</span>ViewBinding<span class="token operator">></span><span class="token punctuation">(</span><span class="token annotation builtin">@LayoutRes</span> <span class="token keyword">val</span> resId<span class="token operator">:</span>Int<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token function">DialogFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> mBinding<span class="token operator">:</span> VB    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreateView</span><span class="token punctuation">(</span>        inflater<span class="token operator">:</span> LayoutInflater<span class="token punctuation">,</span>        container<span class="token operator">:</span> ViewGroup<span class="token operator">?</span><span class="token punctuation">,</span>        savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span>    <span class="token punctuation">)</span><span class="token operator">:</span> View <span class="token punctuation">&#123;</span>        mBinding <span class="token operator">=</span> DataBindingUtil<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>inflater<span class="token punctuation">,</span>resId<span class="token punctuation">,</span>container<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> mBinding<span class="token punctuation">.</span>root    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onViewCreated</span><span class="token punctuation">(</span>view<span class="token operator">:</span> View<span class="token punctuation">,</span> savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onViewCreated</span><span class="token punctuation">(</span>view<span class="token punctuation">,</span> savedInstanceState<span class="token punctuation">)</span>        <span class="token function">initView</span><span class="token punctuation">(</span>mBinding<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        dialog<span class="token operator">?</span><span class="token punctuation">.</span>window<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">val</span> layoutParams <span class="token operator">=</span> it<span class="token punctuation">.</span>attributes            layoutParams<span class="token punctuation">.</span>width <span class="token operator">=</span> WindowManager<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>MATCH_PARENT            layoutParams<span class="token punctuation">.</span>height <span class="token operator">=</span> WindowManager<span class="token punctuation">.</span>LayoutParams<span class="token punctuation">.</span>MATCH_PARENT            it<span class="token punctuation">.</span>attributes <span class="token operator">=</span> layoutParams            <span class="token comment">// 设置使用WindowManager.LayoutParams.FLAG_DIM_BEHIND时窗口后面的调光量。这将覆盖窗口根据其主题选择的默认调光量。0-1f</span>            it<span class="token punctuation">.</span><span class="token function">setDimAmount</span><span class="token punctuation">(</span><span class="token number">0.7f</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">abstract</span> <span class="token keyword">fun</span> <span class="token function">initView</span><span class="token punctuation">(</span>mBinding<span class="token operator">:</span> VB<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> DialogFragment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MotionLayout练习</title>
      <link href="/2023/0185bfa9d3.html"/>
      <url>/2023/0185bfa9d3.html</url>
      
        <content type="html"><![CDATA[<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><h2 id="MotionScene"><a href="#MotionScene" class="headerlink" title="MotionScene"></a>MotionScene</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MotionScene</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ConstraintSet</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/start<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Constraint</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/music_control_background<span class="token punctuation">"</span></span>            <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Layout</span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintBottom_toTopOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/bottom_navi<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Constraint</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Constraint</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/profile_photo<span class="token punctuation">"</span></span>            <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Layout</span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_marginStart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintBottom_toBottomOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintTop_toTopOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Constraint</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Constraint</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/music_button<span class="token punctuation">"</span></span>            <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PropertySet</span> <span class="token attr-name"><span class="token namespace">android:</span>visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>visible<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Constraint</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Constraint</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/music_progress<span class="token punctuation">"</span></span>            <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Layout</span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>400dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintTop_toBottomOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/profile_photo<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50dp<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PropertySet</span>                <span class="token attr-name"><span class="token namespace">android:</span>visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gone<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Constraint</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Constraint</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/close_button<span class="token punctuation">"</span></span>            <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Layout</span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>80dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintTop_toTopOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15dp<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PropertySet</span>                <span class="token attr-name"><span class="token namespace">android:</span>visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gone<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Constraint</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ConstraintSet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ConstraintSet</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/end<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Constraint</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/music_control_background<span class="token punctuation">"</span></span>            <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Layout</span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintBottom_toBottomOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintTop_toTopOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Constraint</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Constraint</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/profile_photo<span class="token punctuation">"</span></span>            <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Layout</span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintTop_toTopOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>120dp<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Constraint</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Constraint</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/music_button<span class="token punctuation">"</span></span>            <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PropertySet</span>                <span class="token attr-name"><span class="token namespace">android:</span>visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gone<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Constraint</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Constraint</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/music_progress<span class="token punctuation">"</span></span>            <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Layout</span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>400dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintTop_toBottomOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/profile_photo<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50dp<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PropertySet</span>                <span class="token attr-name"><span class="token namespace">android:</span>visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>visible<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Constraint</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Constraint</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/close_button<span class="token punctuation">"</span></span>            <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Layout</span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>80dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintTop_toTopOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15dp<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PropertySet</span>                <span class="token attr-name"><span class="token namespace">android:</span>visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>visible<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Constraint</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ConstraintSet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Transition</span>        <span class="token attr-name"><span class="token namespace">app:</span>constraintSetStart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/start<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>constraintSetEnd</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/end<span class="token punctuation">"</span></span>        <span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OnSwipe</span>            <span class="token attr-name"><span class="token namespace">app:</span>touchAnchorId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/profile_photo<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>dragDirection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dragUp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>moveWhenScrollAtTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>nestedScrollFlags</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disableScroll<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>maxAcceleration</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.5<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>maxVelocity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span>            <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OnClick</span>            <span class="token attr-name"><span class="token namespace">app:</span>targetId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/close_button<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>clickAction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toggle<span class="token punctuation">"</span></span>            <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>KeyFrameSet</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>KeyAttribute</span>                <span class="token attr-name"><span class="token namespace">app:</span>motionTarget</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/music_button<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>framePosition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>alpha</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span>                <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>KeyAttribute</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>KeyPosition</span>                <span class="token attr-name"><span class="token namespace">app:</span>motionTarget</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/profile_photo<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>keyPositionType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deltaRelative<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>framePosition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>sizePercent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>percentX</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>percentY</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.2<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>KeyPosition</span>                <span class="token attr-name"><span class="token namespace">app:</span>motionTarget</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/music_control_background<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>keyPositionType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pathRelative<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>framePosition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>percentHeight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>percentX</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>KeyPosition</span>                <span class="token attr-name"><span class="token namespace">app:</span>motionTarget</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/close_button<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>framePosition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>sizePercent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>keyPositionType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pathRelative<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>percentX</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>KeyAttribute</span>                <span class="token attr-name"><span class="token namespace">app:</span>motionTarget</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/close_button<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">app:</span>framePosition</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>alpha</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>                <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>KeyAttribute</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>KeyFrameSet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Transition</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MotionScene</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="疑惑"><a href="#疑惑" class="headerlink" title="疑惑"></a>疑惑</h2><p> moveWhenScrollAtTop&#x3D;”true” + app:nestedScrollFlags&#x3D;”disableScroll” 可以保证滑动正常</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>OnSwipe</span>            <span class="token attr-name"><span class="token namespace">app:</span>touchAnchorId</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/profile_photo<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>dragDirection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>dragUp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>moveWhenScrollAtTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>nestedScrollFlags</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disableScroll<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>maxAcceleration</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.5<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>maxVelocity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span>            <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>部分源码 （看的不是很懂</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onNestedPreScroll</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">View</span> target<span class="token punctuation">,</span>                                <span class="token keyword">int</span> dx<span class="token punctuation">,</span>                                <span class="token keyword">int</span> dy<span class="token punctuation">,</span>                                <span class="token annotation punctuation">@NonNull</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> consumed<span class="token punctuation">,</span>                                <span class="token keyword">int</span> type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">MotionScene</span> scene <span class="token operator">=</span> mScene<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>scene <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token class-name">MotionScene<span class="token punctuation">.</span>Transition</span> currentTransition <span class="token operator">=</span> scene<span class="token punctuation">.</span>mCurrentTransition<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>currentTransition <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>currentTransition<span class="token punctuation">.</span><span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">return</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>currentTransition<span class="token punctuation">.</span><span class="token function">isEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">TouchResponse</span> touchResponse <span class="token operator">=</span> currentTransition<span class="token punctuation">.</span><span class="token function">getTouchResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>touchResponse <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              <span class="token keyword">int</span> regionId <span class="token operator">=</span> touchResponse<span class="token punctuation">.</span><span class="token function">getTouchRegionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>regionId <span class="token operator">!=</span> <span class="token class-name">MotionScene</span><span class="token punctuation">.</span><span class="token constant">UNSET</span> <span class="token operator">&amp;&amp;</span> target<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> regionId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                  <span class="token keyword">return</span><span class="token punctuation">;</span>              <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 好像是在这里判断的 </span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>scene<span class="token punctuation">.</span><span class="token function">getMoveWhenScrollAtTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// This blocks transition during scrolling</span>          <span class="token class-name">TouchResponse</span> touchResponse <span class="token operator">=</span> currentTransition<span class="token punctuation">.</span><span class="token function">getTouchResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">int</span> vert <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>touchResponse <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>touchResponse<span class="token punctuation">.</span><span class="token function">getFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token class-name">TouchResponse</span><span class="token punctuation">.</span><span class="token constant">FLAG_SUPPORT_SCROLL_UP</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                  vert <span class="token operator">=</span> dy<span class="token punctuation">;</span>              <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mTransitionPosition <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> mTransitionPosition <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                  <span class="token operator">&amp;&amp;</span> target<span class="token punctuation">.</span><span class="token function">canScrollVertically</span><span class="token punctuation">(</span>vert<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              <span class="token keyword">return</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// This should be disabled in androidx</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>currentTransition<span class="token punctuation">.</span><span class="token function">getTouchResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span>              <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>currentTransition<span class="token punctuation">.</span><span class="token function">getTouchResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token operator">&amp;</span> <span class="token class-name">TouchResponse</span><span class="token punctuation">.</span><span class="token constant">FLAG_DISABLE_POST_SCROLL</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">float</span> dir <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">getProgressDirection</span><span class="token punctuation">(</span>dx<span class="token punctuation">,</span> dy<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>mTransitionLastPosition <span class="token operator">&lt;=</span> <span class="token number">0.0f</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>dir <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token operator">||</span> <span class="token punctuation">(</span>mTransitionLastPosition <span class="token operator">>=</span> <span class="token number">1.0f</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>dir <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">VERSION</span><span class="token punctuation">.</span><span class="token constant">SDK_INT</span> <span class="token operator">>=</span> <span class="token class-name">Build</span><span class="token punctuation">.</span><span class="token constant">VERSION_CODES</span><span class="token punctuation">.</span><span class="token constant">LOLLIPOP</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                  target<span class="token punctuation">.</span><span class="token function">setNestedScrollingEnabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">// TODO find a better hack</span>                  target<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                      <span class="token annotation punctuation">@Override</span>                      <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                          target<span class="token punctuation">.</span><span class="token function">setNestedScrollingEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token punctuation">&#125;</span>                  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token punctuation">&#125;</span>              <span class="token keyword">return</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">"********** onNestedPreScroll(target:"</span>                  <span class="token operator">+</span> <span class="token class-name">Debug</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">", dx:"</span> <span class="token operator">+</span> dx <span class="token operator">+</span> <span class="token string">", dy:"</span> <span class="token operator">+</span> dy <span class="token operator">+</span> <span class="token string">", type:"</span> <span class="token operator">+</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">float</span> progress <span class="token operator">=</span> mTransitionPosition<span class="token punctuation">;</span>      <span class="token keyword">long</span> time <span class="token operator">=</span> <span class="token function">getNanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      mScrollTargetDX <span class="token operator">=</span> dx<span class="token punctuation">;</span>      mScrollTargetDY <span class="token operator">=</span> dy<span class="token punctuation">;</span>      mScrollTargetDT <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>time <span class="token operator">-</span> mScrollTargetTime<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1E-9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      mScrollTargetTime <span class="token operator">=</span> time<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">v</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">"********** dy = "</span> <span class="token operator">+</span> dx <span class="token operator">+</span> <span class="token string">" dy = "</span> <span class="token operator">+</span> dy <span class="token operator">+</span> <span class="token string">" dt = "</span> <span class="token operator">+</span> mScrollTargetDT<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      scene<span class="token punctuation">.</span><span class="token function">processScrollMove</span><span class="token punctuation">(</span>dx<span class="token punctuation">,</span> dy<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>progress <span class="token operator">!=</span> mTransitionPosition<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          consumed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> dx<span class="token punctuation">;</span>          consumed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> dy<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>consumed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">||</span> consumed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          mUndergoingMotion <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Layout"><a href="#Layout" class="headerlink" title="Layout"></a>Layout</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>layout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res/android<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>app</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/apk/res-auto<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">xmlns:</span>tools</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.android.com/tools<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>data</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>data</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.constraintlayout.motion.widget.MotionLayout</span>        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/container<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/teal_200<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>layoutDescription</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@xml/motion<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">app:</span>showPaths</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>        <span class="token attr-name"><span class="token namespace">tools:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>.MainActivity<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/bottom_navi<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/black<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintBottom_toBottomOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/music_control_background<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/white<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintBottom_toTopOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/bottom_navi<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageView</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/profile_photo<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_marginStart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>scaleType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>centerCrop<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@drawable/ic_toma<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>contentDescription</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>23<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintBottom_toBottomOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/music_control_background<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintTop_toTopOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/music_button<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>40dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_marginEnd</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>play<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintBottom_toBottomOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintTop_toTopOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ProgressBar</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/music_progress<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>400dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gone<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50dp<span class="token punctuation">"</span></span>            <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css">@style/Widget.AppCompat.ProgressBar.Horizontal</span><span class="token punctuation">"</span></span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintTop_toBottomOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/profile_photo<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/profile_photo<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/profile_photo<span class="token punctuation">"</span></span>            <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/close_button<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>80dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/black<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintTop_toTopOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@id/music_control_background<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_marginTop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>visibility</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gone<span class="token punctuation">"</span></span>            <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>androidx.core.widget.NestedScrollView</span>            <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/scroll_test<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0dp<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintStart_toStartOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintEnd_toEndOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintTop_toTopOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span>            <span class="token attr-name"><span class="token namespace">app:</span>layout_constraintBottom_toTopOf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@+id/music_control_background<span class="token punctuation">"</span></span>            <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span>                <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/black<span class="token punctuation">"</span></span>                    <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/white<span class="token punctuation">"</span></span>                    <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/black<span class="token punctuation">"</span></span>                    <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/white<span class="token punctuation">"</span></span>                    <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/black<span class="token punctuation">"</span></span>                    <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/white<span class="token punctuation">"</span></span>                    <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/black<span class="token punctuation">"</span></span>                    <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/white<span class="token punctuation">"</span></span>                    <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>                <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/black<span class="token punctuation">"</span></span>                <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/white<span class="token punctuation">"</span></span>                    <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/black<span class="token punctuation">"</span></span>                    <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/white<span class="token punctuation">"</span></span>                    <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/black<span class="token punctuation">"</span></span>                    <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>View</span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100dp<span class="token punctuation">"</span></span>                    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@color/white<span class="token punctuation">"</span></span>                    <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>androidx.core.widget.NestedScrollView</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>androidx.constraintlayout.motion.widget.MotionLayout</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>layout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> view </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ViewDragHelper练习</title>
      <link href="/2023/018b3f0411.html"/>
      <url>/2023/018b3f0411.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman<span class="token punctuation">.</span>myView<span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context<span class="token keyword">import</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>AttributeSet<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>MotionEvent<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>View<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>ViewGroup<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>view<span class="token punctuation">.</span>ViewCompat<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>view<span class="token punctuation">.</span>children<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>customview<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>ViewDragHelper<span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token keyword">val</span> ROWS <span class="token operator">=</span> <span class="token number">3</span><span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token keyword">val</span> COLUMNS <span class="token operator">=</span> <span class="token number">2</span><span class="token keyword">class</span> <span class="token function">DragView</span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context<span class="token punctuation">,</span> attrs<span class="token operator">:</span> AttributeSet<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">ViewGroup</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> dragHelper <span class="token operator">=</span> ViewDragHelper<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">DragCallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onMeasure</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token operator">:</span> Int<span class="token punctuation">,</span> heightMeasureSpec<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">val</span> specWidth <span class="token operator">=</span> MeasureSpec<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">)</span>        <span class="token keyword">val</span> specHeight <span class="token operator">=</span> MeasureSpec<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span>heightMeasureSpec<span class="token punctuation">)</span>        <span class="token keyword">val</span> childWidth <span class="token operator">=</span> specWidth <span class="token operator">/</span> COLUMNS        <span class="token keyword">val</span> childHeight <span class="token operator">=</span> specHeight <span class="token operator">/</span> ROWS        <span class="token function">measureChildren</span><span class="token punctuation">(</span>MeasureSpec<span class="token punctuation">.</span><span class="token function">makeMeasureSpec</span><span class="token punctuation">(</span>childWidth<span class="token punctuation">,</span> MeasureSpec<span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span><span class="token punctuation">,</span>            MeasureSpec<span class="token punctuation">.</span><span class="token function">makeMeasureSpec</span><span class="token punctuation">(</span>childHeight<span class="token punctuation">,</span> MeasureSpec<span class="token punctuation">.</span>EXACTLY<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token function">setMeasuredDimension</span><span class="token punctuation">(</span>specWidth<span class="token punctuation">,</span> specHeight<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onLayout</span><span class="token punctuation">(</span>changed<span class="token operator">:</span> Boolean<span class="token punctuation">,</span> l<span class="token operator">:</span> Int<span class="token punctuation">,</span> t<span class="token operator">:</span> Int<span class="token punctuation">,</span> r<span class="token operator">:</span> Int<span class="token punctuation">,</span> b<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> childLeft<span class="token operator">:</span> Int        <span class="token keyword">var</span> childTop<span class="token operator">:</span> Int        <span class="token keyword">val</span> childWidth <span class="token operator">=</span> width <span class="token operator">/</span> COLUMNS        <span class="token keyword">val</span> childHeight <span class="token operator">=</span> height <span class="token operator">/</span> ROWS        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> child<span class="token punctuation">)</span> <span class="token keyword">in</span> children<span class="token punctuation">.</span><span class="token function">withIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            childLeft <span class="token operator">=</span> index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">*</span> childWidth            childTop <span class="token operator">=</span> index <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">*</span> childHeight            child<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span>childLeft<span class="token punctuation">,</span> childTop<span class="token punctuation">,</span> childLeft <span class="token operator">+</span> childWidth<span class="token punctuation">,</span> childTop <span class="token operator">+</span> childHeight<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onInterceptTouchEvent</span><span class="token punctuation">(</span>ev<span class="token operator">:</span> MotionEvent<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> dragHelper<span class="token punctuation">.</span><span class="token function">shouldInterceptTouchEvent</span><span class="token punctuation">(</span>ev<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span>event<span class="token operator">:</span> MotionEvent<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>        dragHelper<span class="token punctuation">.</span><span class="token function">processTouchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">computeScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>dragHelper<span class="token punctuation">.</span><span class="token function">continueSettling</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            ViewCompat<span class="token punctuation">.</span><span class="token function">postInvalidateOnAnimation</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">inner</span> <span class="token keyword">class</span> DragCallback <span class="token operator">:</span> ViewDragHelper<span class="token punctuation">.</span><span class="token function">Callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> captureX <span class="token operator">=</span> <span class="token number">0f</span>        <span class="token keyword">var</span> captureY <span class="token operator">=</span> <span class="token number">0f</span>        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">tryCaptureView</span><span class="token punctuation">(</span>child<span class="token operator">:</span> View<span class="token punctuation">,</span> pointerId<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>dragHelper<span class="token punctuation">.</span>viewDragState <span class="token operator">==</span> ViewDragHelper<span class="token punctuation">.</span>STATE_SETTLING<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span>            <span class="token punctuation">&#125;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">clampViewPositionHorizontal</span><span class="token punctuation">(</span>child<span class="token operator">:</span> View<span class="token punctuation">,</span> left<span class="token operator">:</span> Int<span class="token punctuation">,</span> dx<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> left        <span class="token punctuation">&#125;</span>        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">clampViewPositionVertical</span><span class="token punctuation">(</span>child<span class="token operator">:</span> View<span class="token punctuation">,</span> top<span class="token operator">:</span> Int<span class="token punctuation">,</span> dy<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> top        <span class="token punctuation">&#125;</span>        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onViewCaptured</span><span class="token punctuation">(</span>capturedChild<span class="token operator">:</span> View<span class="token punctuation">,</span> activePointerId<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            capturedChild<span class="token punctuation">.</span>elevation <span class="token operator">=</span> elevation <span class="token operator">+</span> <span class="token number">1</span>            captureX <span class="token operator">=</span> capturedChild<span class="token punctuation">.</span>left<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            captureY <span class="token operator">=</span> capturedChild<span class="token punctuation">.</span>top<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onViewReleased</span><span class="token punctuation">(</span>releasedChild<span class="token operator">:</span> View<span class="token punctuation">,</span> xvel<span class="token operator">:</span> Float<span class="token punctuation">,</span> yvel<span class="token operator">:</span> Float<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            dragHelper<span class="token punctuation">.</span><span class="token function">settleCapturedViewAt</span><span class="token punctuation">(</span>captureX<span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> captureY<span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token function">postInvalidateOnAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onViewDragStateChanged</span><span class="token punctuation">(</span>state<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>state <span class="token operator">==</span> ViewDragHelper<span class="token punctuation">.</span>STATE_IDLE<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                dragHelper<span class="token punctuation">.</span>capturedView<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">&#123;</span>                    it<span class="token punctuation">.</span>elevation<span class="token operator">--</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> view </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ViewGroup 滑动练习</title>
      <link href="/2023/018ba181ea.html"/>
      <url>/2023/018ba181ea.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman<span class="token punctuation">.</span>myView<span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context<span class="token keyword">import</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>AttributeSet<span class="token keyword">import</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Log<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>MotionEvent<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>VelocityTracker<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>ViewConfiguration<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>ViewGroup<span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>OverScroller<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>constraintlayout<span class="token punctuation">.</span>motion<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>MotionInterpolator<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>view<span class="token punctuation">.</span>children<span class="token keyword">import</span> kotlin<span class="token punctuation">.</span>math<span class="token punctuation">.</span>abs<span class="token keyword">import</span> kotlin<span class="token punctuation">.</span>math<span class="token punctuation">.</span>min<span class="token keyword">class</span> <span class="token function">TwoPager</span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context<span class="token punctuation">,</span> attrs<span class="token operator">:</span> AttributeSet<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">ViewGroup</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> viewConfiguration <span class="token operator">=</span> ViewConfiguration<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>    <span class="token comment">//Distance in pixels a touch can wander before we think the user is scrolling a full page</span>    <span class="token comment">//在我们认为用户滚动整个页面之前，触摸可能会偏离的距离（以像素为单位）</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> pagingSlop <span class="token operator">=</span> viewConfiguration<span class="token punctuation">.</span>scaledPagingTouchSlop    <span class="token comment">//Minimum velocity to initiate a fling, as measured in pixels per second.</span>    <span class="token comment">//启动投掷的最小速度，以每秒像素数为单位。</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> minVelocity <span class="token operator">=</span> viewConfiguration<span class="token punctuation">.</span>scaledMinimumFlingVelocity    <span class="token comment">//启动投掷的最大速度，以每秒像素数为单位。</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> maxVelocity <span class="token operator">=</span> viewConfiguration<span class="token punctuation">.</span>scaledMaximumFlingVelocity    <span class="token keyword">private</span> <span class="token keyword">val</span> velocityTracker <span class="token operator">=</span> VelocityTracker<span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> isScrolling <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> downX <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> downY <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> downScrollX <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> overScroller <span class="token operator">=</span> <span class="token function">OverScroller</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onMeasure</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token operator">:</span> Int<span class="token punctuation">,</span> heightMeasureSpec<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//给所有子view边界</span>        <span class="token function">measureChildren</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">,</span> heightMeasureSpec<span class="token punctuation">)</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onMeasure</span><span class="token punctuation">(</span>widthMeasureSpec<span class="token punctuation">,</span> heightMeasureSpec<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onLayout</span><span class="token punctuation">(</span>changed<span class="token operator">:</span> Boolean<span class="token punctuation">,</span> l<span class="token operator">:</span> Int<span class="token punctuation">,</span> t<span class="token operator">:</span> Int<span class="token punctuation">,</span> r<span class="token operator">:</span> Int<span class="token punctuation">,</span> b<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> childLeft <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">val</span> childTop <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">var</span> childRight <span class="token operator">=</span> width        <span class="token keyword">val</span> childBottom <span class="token operator">=</span> height        <span class="token keyword">for</span> <span class="token punctuation">(</span>child <span class="token keyword">in</span> children<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            child<span class="token punctuation">.</span><span class="token function">layout</span><span class="token punctuation">(</span>childLeft<span class="token punctuation">,</span> childTop<span class="token punctuation">,</span> childRight<span class="token punctuation">,</span> childBottom<span class="token punctuation">)</span>            childLeft <span class="token operator">+=</span> width            childRight <span class="token operator">+=</span> width        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onInterceptTouchEvent</span><span class="token punctuation">(</span>event<span class="token operator">:</span> MotionEvent<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>actionMasked <span class="token operator">==</span> MotionEvent<span class="token punctuation">.</span>ACTION_DOWN<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"wuhongru"</span></span><span class="token punctuation">,</span>scrollX<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            velocityTracker<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        velocityTracker<span class="token punctuation">.</span><span class="token function">addMovement</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">when</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>actionMasked<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            MotionEvent<span class="token punctuation">.</span>ACTION_DOWN<span class="token operator">-></span><span class="token punctuation">&#123;</span>                downX <span class="token operator">=</span> event<span class="token punctuation">.</span>x                downY <span class="token operator">=</span> event<span class="token punctuation">.</span>y                isScrolling <span class="token operator">=</span> <span class="token boolean">false</span>                downScrollX <span class="token operator">=</span> scrollX<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            MotionEvent<span class="token punctuation">.</span>ACTION_MOVE<span class="token operator">-></span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isScrolling<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">val</span> dx <span class="token operator">=</span> event<span class="token punctuation">.</span>x<span class="token operator">-</span>downX                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>dx<span class="token punctuation">)</span><span class="token operator">></span>pagingSlop<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        isScrolling <span class="token operator">=</span> <span class="token boolean">true</span>                        parent<span class="token punctuation">.</span><span class="token function">requestDisallowInterceptTouchEvent</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>                        result <span class="token operator">=</span> <span class="token boolean">true</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> result    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span>event<span class="token operator">:</span> MotionEvent<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>actionMasked <span class="token operator">==</span> MotionEvent<span class="token punctuation">.</span>ACTION_DOWN<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            velocityTracker<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        velocityTracker<span class="token punctuation">.</span><span class="token function">addMovement</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>        <span class="token keyword">when</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>actionMasked<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            MotionEvent<span class="token punctuation">.</span>ACTION_DOWN<span class="token operator">-></span><span class="token punctuation">&#123;</span>                downX <span class="token operator">=</span> event<span class="token punctuation">.</span>x                downY <span class="token operator">=</span> event<span class="token punctuation">.</span>y                downScrollX <span class="token operator">=</span> scrollX<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            MotionEvent<span class="token punctuation">.</span>ACTION_MOVE<span class="token operator">-></span><span class="token punctuation">&#123;</span>                <span class="token keyword">val</span> dx <span class="token operator">=</span> <span class="token punctuation">(</span>downScrollX<span class="token operator">-</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>x<span class="token operator">-</span>downX<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">coerceAtLeast</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">coerceAtMost</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span>                <span class="token function">scrollTo</span><span class="token punctuation">(</span>dx<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            MotionEvent<span class="token punctuation">.</span>ACTION_UP<span class="token operator">-></span><span class="token punctuation">&#123;</span>                velocityTracker<span class="token punctuation">.</span><span class="token function">computeCurrentVelocity</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span>maxVelocity<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">val</span> vx <span class="token operator">=</span> velocityTracker<span class="token punctuation">.</span>xVelocity                <span class="token keyword">val</span> scrollX <span class="token operator">=</span> scrollX                <span class="token keyword">val</span> targetPage <span class="token operator">=</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>vx<span class="token punctuation">)</span><span class="token operator">&lt;</span> minVelocity<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>scrollX<span class="token operator">></span>width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">0</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>vx<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token number">0</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">val</span> scrollDistance <span class="token operator">=</span> <span class="token keyword">if</span><span class="token punctuation">(</span>targetPage <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> width<span class="token operator">-</span>scrollX <span class="token keyword">else</span> <span class="token operator">-</span>scrollX                overScroller<span class="token punctuation">.</span><span class="token function">startScroll</span><span class="token punctuation">(</span>scrollX<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>scrollDistance<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>                <span class="token function">postInvalidateOnAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 每次调用draw的时候会被调用</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">computeScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>overScroller<span class="token punctuation">.</span><span class="token function">computeScrollOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">scrollTo</span><span class="token punctuation">(</span>overScroller<span class="token punctuation">.</span>currX<span class="token punctuation">,</span>overScroller<span class="token punctuation">.</span>currY<span class="token punctuation">)</span>            <span class="token function">postInvalidateOnAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> view </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>android判断是否滑动的几个常量</title>
      <link href="/2023/0153fa5de2.html"/>
      <url>/2023/0153fa5de2.html</url>
      
        <content type="html"><![CDATA[<h2 id="记录一下几个常量"><a href="#记录一下几个常量" class="headerlink" title="记录一下几个常量"></a>记录一下几个常量</h2><p>众所周知手放在屏幕上其实是一直在move的。考虑到安卓众多机型不同的屏幕分辨率，如何判断用户是在滑动成为了一个问题。对此安卓提供了一系列的常量，在不同的机型上是不一样的。</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">private</span> <span class="token keyword">val</span> viewConfiguration <span class="token operator">=</span> ViewConfiguration<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token comment">//Distance in pixels a touch can wander before we think the user is scrolling a full page</span><span class="token comment">//在我们认为用户滚动整个页面之前，触摸可能会偏离的距离（以像素为单位）</span><span class="token keyword">private</span> <span class="token keyword">val</span> pagingSlop <span class="token operator">=</span> viewConfiguration<span class="token punctuation">.</span>scaledPagingTouchSlop<span class="token comment">//Distance in pixels a touch can wander before we think the user is scrolling</span><span class="token comment">//触摸在我们认为用户滚动之前可能会徘徊的距离（以像素为单位）</span><span class="token keyword">private</span> <span class="token keyword">val</span> touchSlop <span class="token operator">=</span> viewConfiguration<span class="token punctuation">.</span>scaledTouchSlop<span class="token comment">// Distance in pixels a touch must be outside the bounds of a window for it to be counted as outside the window for purposes of dismissing that window.</span><span class="token comment">// 触摸的距离（以像素为单位）必须在窗口边界之外，才能将其计为窗口外，以便关闭该窗口</span><span class="token keyword">private</span> <span class="token keyword">val</span> windowTouchSlop <span class="token operator">=</span> viewConfiguration<span class="token punctuation">.</span>scaledWindowTouchSlop<span class="token comment">//Distance in pixels between the first touch and second touch to still be considered a double tap</span><span class="token comment">//第一次触摸和第二次触摸之间的距离（以像素为单位）仍被视为双击</span><span class="token keyword">private</span> <span class="token keyword">val</span> doubleTapSlop <span class="token operator">=</span> viewConfiguration<span class="token punctuation">.</span>scaledDoubleTapSlop<span class="token comment">//Inset in pixels to look for touchable content when the user touches the edge of the screen</span><span class="token comment">//以像素为单位插入，以便在用户触摸屏幕边缘时查找可触摸的内容</span><span class="token keyword">private</span> <span class="token keyword">val</span> edgeSlop <span class="token operator">=</span> viewConfiguration<span class="token punctuation">.</span>scaledEdgeSlop<span class="token comment">//Minimum velocity to initiate a fling, as measured in pixels per second.</span><span class="token comment">//启动投掷的最小速度，以每秒像素数为单位。</span><span class="token keyword">private</span> <span class="token keyword">val</span> minVelocity <span class="token operator">=</span> viewConfiguration<span class="token punctuation">.</span>scaledMinimumFlingVelocity<span class="token comment">//启动投掷的最大速度，以每秒像素数为单位。</span><span class="token keyword">private</span> <span class="token keyword">val</span> maxVelocity <span class="token operator">=</span> viewConfiguration<span class="token punctuation">.</span>scaledMaximumFlingVelocity<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> view </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>练习-实现多指画线的view</title>
      <link href="/2023/01b59c7518.html"/>
      <url>/2023/01b59c7518.html</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman<span class="token punctuation">.</span>myView<span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context<span class="token keyword">import</span> android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>Canvas<span class="token keyword">import</span> android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>Paint<span class="token keyword">import</span> android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>Path<span class="token keyword">import</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>AttributeSet<span class="token keyword">import</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>SparseArray<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>MotionEvent<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>View<span class="token keyword">import</span> com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman<span class="token punctuation">.</span>dp<span class="token keyword">class</span> <span class="token function">TouchView3</span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context<span class="token punctuation">,</span> attrs<span class="token operator">:</span> AttributeSet<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">View</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> mPaint <span class="token operator">=</span> <span class="token function">Paint</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>ANTI_ALIAS_FLAG<span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> paths <span class="token operator">=</span> SparseArray<span class="token operator">&lt;</span>Path<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">init</span> <span class="token punctuation">&#123;</span>        mPaint<span class="token punctuation">.</span>style <span class="token operator">=</span> Paint<span class="token punctuation">.</span>Style<span class="token punctuation">.</span>STROKE        mPaint<span class="token punctuation">.</span>strokeWidth <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">.</span>dp        mPaint<span class="token punctuation">.</span>strokeCap <span class="token operator">=</span> Paint<span class="token punctuation">.</span>Cap<span class="token punctuation">.</span>ROUND        mPaint<span class="token punctuation">.</span>strokeJoin <span class="token operator">=</span> Paint<span class="token punctuation">.</span>Join<span class="token punctuation">.</span>ROUND    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onDraw</span><span class="token punctuation">(</span>canvas<span class="token operator">:</span> Canvas<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDraw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">0</span> until paths<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            canvas<span class="token punctuation">.</span><span class="token function">drawPath</span><span class="token punctuation">(</span>paths<span class="token punctuation">.</span><span class="token function">valueAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>mPaint<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span>event<span class="token operator">:</span> MotionEvent<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>        <span class="token keyword">when</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>actionMasked<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            MotionEvent<span class="token punctuation">.</span>ACTION_DOWN<span class="token punctuation">,</span>MotionEvent<span class="token punctuation">.</span>ACTION_POINTER_DOWN<span class="token operator">-></span><span class="token punctuation">&#123;</span>                <span class="token keyword">val</span> index <span class="token operator">=</span> event<span class="token punctuation">.</span>actionIndex                <span class="token keyword">val</span> pointerId <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getPointerId</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>                <span class="token keyword">val</span> path <span class="token operator">=</span> <span class="token function">Path</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                path<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">,</span>event<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span>                paths<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>pointerId<span class="token punctuation">,</span>path<span class="token punctuation">)</span>                <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            MotionEvent<span class="token punctuation">.</span>ACTION_POINTER_UP<span class="token punctuation">,</span>MotionEvent<span class="token punctuation">.</span>ACTION_UP<span class="token operator">-></span><span class="token punctuation">&#123;</span>                <span class="token keyword">val</span> pointerId <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getPointerId</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>actionIndex<span class="token punctuation">)</span>                paths<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>pointerId<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            MotionEvent<span class="token punctuation">.</span>ACTION_MOVE<span class="token operator">-></span><span class="token punctuation">&#123;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> <span class="token number">0</span> until paths<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">val</span> pointerId <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getPointerId</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>                    <span class="token keyword">val</span> curPath <span class="token operator">=</span> paths<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>pointerId<span class="token punctuation">)</span>                    curPath<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>event<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> view </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>练习-实现抢夺的多点触控的view</title>
      <link href="/2023/01b327be45.html"/>
      <url>/2023/01b327be45.html</url>
      
        <content type="html"><![CDATA[<h2 id="自定义view"><a href="#自定义view" class="headerlink" title="自定义view"></a>自定义view</h2><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman<span class="token punctuation">.</span>myView<span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context<span class="token keyword">import</span> android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>Canvas<span class="token keyword">import</span> android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>Paint<span class="token keyword">import</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>AttributeSet<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>MotionEvent<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>View<span class="token keyword">import</span> com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman<span class="token punctuation">.</span>R<span class="token keyword">import</span> com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman<span class="token punctuation">.</span>dp<span class="token keyword">import</span> com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman<span class="token punctuation">.</span>getReplacement<span class="token keyword">class</span> <span class="token function">TouchView2</span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context<span class="token punctuation">,</span> attrs<span class="token operator">:</span> AttributeSet<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">View</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> mPaint <span class="token operator">=</span> <span class="token function">Paint</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>ANTI_ALIAS_FLAG<span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> mBitmap <span class="token operator">=</span> <span class="token function">getReplacement</span><span class="token punctuation">(</span>resources<span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">.</span>dp<span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ic_toma<span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> originalOffsetX <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> originalOffsetY <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> mTrackingPointerId <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> offsetX <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> offsetY <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> downX <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> downY <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onDraw</span><span class="token punctuation">(</span>canvas<span class="token operator">:</span> Canvas<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDraw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span>        canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>mBitmap<span class="token punctuation">,</span>offsetX<span class="token punctuation">,</span>offsetY<span class="token punctuation">,</span>mPaint<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span>event<span class="token operator">:</span> MotionEvent<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>        <span class="token keyword">when</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>actionMasked<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            MotionEvent<span class="token punctuation">.</span>ACTION_DOWN<span class="token operator">-></span><span class="token punctuation">&#123;</span>                mTrackingPointerId <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getPointerId</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                downX <span class="token operator">=</span> event<span class="token punctuation">.</span>x                downY <span class="token operator">=</span> event<span class="token punctuation">.</span>y            <span class="token punctuation">&#125;</span>            MotionEvent<span class="token punctuation">.</span>ACTION_POINTER_DOWN<span class="token operator">-></span><span class="token punctuation">&#123;</span>                <span class="token keyword">val</span> actionIndex <span class="token operator">=</span> event<span class="token punctuation">.</span>actionIndex                mTrackingPointerId <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getPointerId</span><span class="token punctuation">(</span>actionIndex<span class="token punctuation">)</span>                downX <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span>actionIndex<span class="token punctuation">)</span>                downY <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span>actionIndex<span class="token punctuation">)</span>                originalOffsetX <span class="token operator">=</span> offsetX                originalOffsetY <span class="token operator">=</span> offsetY            <span class="token punctuation">&#125;</span>            MotionEvent<span class="token punctuation">.</span>ACTION_POINTER_UP<span class="token operator">-></span><span class="token punctuation">&#123;</span>                <span class="token keyword">val</span> actionIndex <span class="token operator">=</span> event<span class="token punctuation">.</span>actionIndex                <span class="token keyword">val</span> pointerId <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getPointerId</span><span class="token punctuation">(</span>actionIndex<span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>pointerId <span class="token operator">==</span> mTrackingPointerId<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">val</span> newIndex <span class="token operator">=</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>actionIndex <span class="token operator">==</span> event<span class="token punctuation">.</span>pointerCount<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        event<span class="token punctuation">.</span>pointerCount <span class="token operator">-</span> <span class="token number">2</span>                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                        event<span class="token punctuation">.</span>pointerCount <span class="token operator">-</span> <span class="token number">1</span>                    <span class="token punctuation">&#125;</span>                    mTrackingPointerId <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getPointerId</span><span class="token punctuation">(</span>newIndex<span class="token punctuation">)</span>                    downX <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span>newIndex<span class="token punctuation">)</span>                    downY <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span>newIndex<span class="token punctuation">)</span>                    originalOffsetX <span class="token operator">=</span> offsetX                    originalOffsetY <span class="token operator">=</span> offsetY                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            MotionEvent<span class="token punctuation">.</span>ACTION_MOVE<span class="token operator">-></span><span class="token punctuation">&#123;</span>                <span class="token keyword">val</span> index <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">findPointerIndex</span><span class="token punctuation">(</span>mTrackingPointerId<span class="token punctuation">)</span>                offsetX <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getX</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">-</span> downX <span class="token operator">+</span> originalOffsetX                offsetY <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token function">getY</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token operator">-</span> downY <span class="token operator">+</span> originalOffsetY                <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> view </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>练习-实现双击滑动双指缩放的view</title>
      <link href="/2023/0173448802.html"/>
      <url>/2023/0173448802.html</url>
      
        <content type="html"><![CDATA[<h2 id="事前准备"><a href="#事前准备" class="headerlink" title="事前准备"></a>事前准备</h2><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token comment">// 获取图片的bitmap</span><span class="token keyword">fun</span> <span class="token function">getReplacement</span><span class="token punctuation">(</span>res<span class="token operator">:</span>Resources<span class="token punctuation">,</span>width<span class="token operator">:</span> Int<span class="token punctuation">,</span>id<span class="token operator">:</span>Int<span class="token punctuation">)</span><span class="token operator">:</span>Bitmap<span class="token punctuation">&#123;</span>    <span class="token keyword">val</span> options <span class="token operator">=</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">Options</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    options<span class="token punctuation">.</span>inJustDecodeBounds <span class="token operator">=</span> <span class="token boolean">true</span>    BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span>id<span class="token punctuation">,</span>options<span class="token punctuation">)</span>    options<span class="token punctuation">.</span>inJustDecodeBounds <span class="token operator">=</span> <span class="token boolean">false</span>    options<span class="token punctuation">.</span>inDensity <span class="token operator">=</span> options<span class="token punctuation">.</span>outWidth    options<span class="token punctuation">.</span>inTargetDensity <span class="token operator">=</span> width    <span class="token keyword">return</span> BitmapFactory<span class="token punctuation">.</span><span class="token function">decodeResource</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span>id<span class="token punctuation">,</span>options<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">val</span> Float<span class="token punctuation">.</span>dp    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> TypedValue<span class="token punctuation">.</span><span class="token function">applyDimension</span><span class="token punctuation">(</span>TypedValue<span class="token punctuation">.</span>COMPLEX_UNIT_DIP<span class="token punctuation">,</span>        <span class="token keyword">this</span><span class="token punctuation">,</span>        Resources<span class="token punctuation">.</span><span class="token function">getSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>displayMetrics<span class="token punctuation">)</span><span class="token keyword">val</span> Float<span class="token punctuation">.</span>sp    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> TypedValue<span class="token punctuation">.</span><span class="token function">applyDimension</span><span class="token punctuation">(</span>TypedValue<span class="token punctuation">.</span>COMPLEX_UNIT_SP<span class="token punctuation">,</span>        <span class="token keyword">this</span><span class="token punctuation">,</span>        Resources<span class="token punctuation">.</span><span class="token function">getSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>displayMetrics<span class="token punctuation">)</span><span class="token keyword">val</span> Int<span class="token punctuation">.</span>dp    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> TypedValue<span class="token punctuation">.</span><span class="token function">applyDimension</span><span class="token punctuation">(</span>TypedValue<span class="token punctuation">.</span>COMPLEX_UNIT_DIP<span class="token punctuation">,</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        Resources<span class="token punctuation">.</span><span class="token function">getSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>displayMetrics<span class="token punctuation">)</span><span class="token keyword">val</span> Int<span class="token punctuation">.</span>sp    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> TypedValue<span class="token punctuation">.</span><span class="token function">applyDimension</span><span class="token punctuation">(</span>TypedValue<span class="token punctuation">.</span>COMPLEX_UNIT_SP<span class="token punctuation">,</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        Resources<span class="token punctuation">.</span><span class="token function">getSystem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>displayMetrics<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自定义view"><a href="#自定义view" class="headerlink" title="自定义view"></a>自定义view</h2><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">package</span> com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman<span class="token punctuation">.</span>myView<span class="token keyword">import</span> android<span class="token punctuation">.</span>animation<span class="token punctuation">.</span>ObjectAnimator<span class="token keyword">import</span> android<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>SuppressLint<span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context<span class="token keyword">import</span> android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>Canvas<span class="token keyword">import</span> android<span class="token punctuation">.</span>graphics<span class="token punctuation">.</span>Paint<span class="token keyword">import</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>AttributeSet<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>GestureDetector<span class="token punctuation">.</span>SimpleOnGestureListener<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>MotionEvent<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>ScaleGestureDetector<span class="token keyword">import</span> android<span class="token punctuation">.</span>view<span class="token punctuation">.</span>View<span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>OverScroller<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>view<span class="token punctuation">.</span>GestureDetectorCompat<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>view<span class="token punctuation">.</span>ViewCompat<span class="token keyword">import</span> com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman<span class="token punctuation">.</span>R<span class="token keyword">import</span> com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman<span class="token punctuation">.</span>dp<span class="token keyword">import</span> com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman<span class="token punctuation">.</span>getReplacement<span class="token keyword">import</span> kotlin<span class="token punctuation">.</span>math<span class="token punctuation">.</span>abs<span class="token comment">// 额外的缩放系数 使得放大的比边界还多出去一点 便于四边滑动</span><span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token keyword">val</span> EXTRA_SCALE_COEFFICIENT <span class="token operator">=</span> <span class="token number">1.2f</span><span class="token keyword">class</span> <span class="token function">SecondView</span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context<span class="token punctuation">,</span> attributes<span class="token operator">:</span> AttributeSet<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">View</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> attributes<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//拿到宽为300dp的bitmap</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> mBitmap <span class="token operator">=</span> <span class="token function">getReplacement</span><span class="token punctuation">(</span>resources<span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">.</span>dp<span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>ic_toma<span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> mPaint <span class="token operator">=</span> <span class="token function">Paint</span><span class="token punctuation">(</span>Paint<span class="token punctuation">.</span>ANTI_ALIAS_FLAG<span class="token punctuation">)</span>    <span class="token comment">//初始偏移 用于使得bitmap居中</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> originalOffsetX <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> originalOffsetY <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token comment">// 缩放系数的两个边界值</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> smallScale <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> bigScale <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token comment">//滑动和双指缩放的便宜量</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> offsetX <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> offsetY <span class="token operator">=</span> <span class="token number">0f</span>    <span class="token comment">// 是否为放大状态</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> isBig <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token comment">// 当前的缩放系数</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> curScale <span class="token operator">=</span> <span class="token number">0f</span>        <span class="token keyword">set</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            field <span class="token operator">=</span> value            <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token comment">// 用于实现双击和滑动</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> mGestureDetector <span class="token operator">=</span> <span class="token function">GestureDetectorCompat</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token function">GestureListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// 用于计算快滑的偏移量</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> overScroller <span class="token operator">=</span> <span class="token function">OverScroller</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>    <span class="token comment">//用于view的刷新</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> refreshRunnable <span class="token operator">=</span> <span class="token function">RefreshRunnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">//用于实现双指捏合等操作的监听</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> scaleGestureListener <span class="token operator">=</span> <span class="token function">ScaleGestureListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> mScaleGestureDetector <span class="token operator">=</span> <span class="token function">ScaleGestureDetector</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>scaleGestureListener<span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> scaleAnimator <span class="token operator">=</span> ObjectAnimator<span class="token punctuation">.</span><span class="token function">ofFloat</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">"curScale"</span></span><span class="token punctuation">,</span> smallScale<span class="token punctuation">,</span> bigScale<span class="token punctuation">)</span>    <span class="token annotation builtin">@SuppressLint</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"ClickableViewAccessibility"</span></span><span class="token punctuation">)</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onTouchEvent</span><span class="token punctuation">(</span>event<span class="token operator">:</span> MotionEvent<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>        mScaleGestureDetector<span class="token punctuation">.</span><span class="token function">onTouchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mScaleGestureDetector<span class="token punctuation">.</span>isInProgress<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            mGestureDetector<span class="token punctuation">.</span><span class="token function">onTouchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onSizeChanged</span><span class="token punctuation">(</span>w<span class="token operator">:</span> Int<span class="token punctuation">,</span> h<span class="token operator">:</span> Int<span class="token punctuation">,</span> oldw<span class="token operator">:</span> Int<span class="token punctuation">,</span> oldh<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onSizeChanged</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> h<span class="token punctuation">,</span> oldw<span class="token punctuation">,</span> oldh<span class="token punctuation">)</span>        originalOffsetX <span class="token operator">=</span> <span class="token punctuation">(</span>width <span class="token operator">-</span> mBitmap<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2f</span>        originalOffsetY <span class="token operator">=</span> <span class="token punctuation">(</span>height <span class="token operator">-</span> mBitmap<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2f</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>width <span class="token operator">/</span> height<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> mBitmap<span class="token punctuation">.</span>width <span class="token operator">/</span> mBitmap<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            smallScale <span class="token operator">=</span> height <span class="token operator">/</span> mBitmap<span class="token punctuation">.</span>height<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            bigScale <span class="token operator">=</span> width <span class="token operator">/</span> mBitmap<span class="token punctuation">.</span>width<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> EXTRA_SCALE_COEFFICIENT        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            smallScale <span class="token operator">=</span> width <span class="token operator">/</span> mBitmap<span class="token punctuation">.</span>width<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            bigScale <span class="token operator">=</span> height <span class="token operator">/</span> mBitmap<span class="token punctuation">.</span>height<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> EXTRA_SCALE_COEFFICIENT        <span class="token punctuation">&#125;</span>        curScale <span class="token operator">=</span> smallScale        scaleAnimator<span class="token punctuation">.</span><span class="token function">setFloatValues</span><span class="token punctuation">(</span>smallScale<span class="token punctuation">,</span>bigScale<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onDraw</span><span class="token punctuation">(</span>canvas<span class="token operator">:</span> Canvas<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDraw</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span>        <span class="token keyword">val</span> scaleCoefficient <span class="token operator">=</span> <span class="token punctuation">(</span>curScale<span class="token operator">-</span>smallScale<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>bigScale<span class="token operator">-</span>smallScale<span class="token punctuation">)</span>        canvas<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>offsetX<span class="token operator">*</span>scaleCoefficient<span class="token punctuation">,</span>offsetY<span class="token operator">*</span>scaleCoefficient<span class="token punctuation">)</span>        canvas<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span>curScale<span class="token punctuation">,</span> curScale<span class="token punctuation">,</span> width <span class="token operator">/</span> <span class="token number">2f</span><span class="token punctuation">,</span> height <span class="token operator">/</span> <span class="token number">2f</span><span class="token punctuation">)</span>        canvas<span class="token punctuation">.</span><span class="token function">drawBitmap</span><span class="token punctuation">(</span>mBitmap<span class="token punctuation">,</span> originalOffsetX<span class="token punctuation">,</span> originalOffsetY<span class="token punctuation">,</span> mPaint<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">setOffsetMax</span><span class="token punctuation">(</span>currOffset<span class="token operator">:</span> Float<span class="token punctuation">,</span> duration<span class="token operator">:</span> Float<span class="token punctuation">)</span><span class="token operator">:</span> Float <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span>currOffset<span class="token punctuation">)</span> <span class="token operator">>=</span> duration<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">abs</span><span class="token punctuation">(</span>currOffset<span class="token punctuation">)</span> <span class="token operator">/</span> currOffset <span class="token operator">*</span> duration        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            currOffset        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">inner</span> <span class="token keyword">class</span> GestureListener<span class="token operator">:</span><span class="token function">SimpleOnGestureListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//一定要返回为true 才能拦截后续的事件序列</span>        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onDown</span><span class="token punctuation">(</span>e<span class="token operator">:</span> MotionEvent<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onFling</span><span class="token punctuation">(</span>            e1<span class="token operator">:</span> MotionEvent<span class="token punctuation">,</span>            e2<span class="token operator">:</span> MotionEvent<span class="token punctuation">,</span>            velocityX<span class="token operator">:</span> Float<span class="token punctuation">,</span>            velocityY<span class="token operator">:</span> Float        <span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>isBig<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                overScroller<span class="token punctuation">.</span><span class="token function">fling</span><span class="token punctuation">(</span>                    offsetX<span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> offsetY<span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> velocityX<span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> velocityY<span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span>mBitmap<span class="token punctuation">.</span>width <span class="token operator">*</span> bigScale <span class="token operator">-</span> width<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">(</span><span class="token punctuation">(</span>mBitmap<span class="token punctuation">.</span>width <span class="token operator">*</span> bigScale <span class="token operator">-</span> width<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span>mBitmap<span class="token punctuation">.</span>height <span class="token operator">*</span> bigScale <span class="token operator">-</span> height<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">(</span><span class="token punctuation">(</span>mBitmap<span class="token punctuation">.</span>height <span class="token operator">*</span> bigScale <span class="token operator">-</span> height<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token number">70</span><span class="token punctuation">.</span>dp<span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">.</span>dp<span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">)</span>                ViewCompat<span class="token punctuation">.</span><span class="token function">postOnAnimation</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token label symbol">@SecondView</span><span class="token punctuation">,</span> refreshRunnable<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onScroll</span><span class="token punctuation">(</span>            e1<span class="token operator">:</span> MotionEvent<span class="token punctuation">,</span>            e2<span class="token operator">:</span> MotionEvent<span class="token punctuation">,</span>            distanceX<span class="token operator">:</span> Float<span class="token punctuation">,</span>            distanceY<span class="token operator">:</span> Float        <span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>isBig<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                offsetX <span class="token operator">-=</span> distanceX                offsetX <span class="token operator">=</span> <span class="token function">setOffsetMax</span><span class="token punctuation">(</span>offsetX<span class="token punctuation">,</span> <span class="token punctuation">(</span>mBitmap<span class="token punctuation">.</span>width <span class="token operator">*</span> bigScale <span class="token operator">-</span> width<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>                offsetY <span class="token operator">-=</span> distanceY                offsetY <span class="token operator">=</span> <span class="token function">setOffsetMax</span><span class="token punctuation">(</span>offsetY<span class="token punctuation">,</span> <span class="token punctuation">(</span>mBitmap<span class="token punctuation">.</span>height <span class="token operator">*</span> bigScale <span class="token operator">-</span> height<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>                <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onDoubleTap</span><span class="token punctuation">(</span>e<span class="token operator">:</span> MotionEvent<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>            isBig <span class="token operator">=</span> <span class="token operator">!</span>isBig            <span class="token keyword">if</span> <span class="token punctuation">(</span>isBig<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                offsetX <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>x<span class="token operator">-</span>width<span class="token operator">/</span><span class="token number">2f</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>bigScale<span class="token operator">/</span>smallScale<span class="token punctuation">)</span>                offsetX <span class="token operator">=</span> <span class="token function">setOffsetMax</span><span class="token punctuation">(</span>offsetX<span class="token punctuation">,</span> <span class="token punctuation">(</span>mBitmap<span class="token punctuation">.</span>width <span class="token operator">*</span> bigScale <span class="token operator">-</span> width<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>                offsetY <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>y<span class="token operator">-</span>height<span class="token operator">/</span><span class="token number">2f</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>bigScale<span class="token operator">/</span>smallScale<span class="token punctuation">)</span>                offsetY <span class="token operator">=</span> <span class="token function">setOffsetMax</span><span class="token punctuation">(</span>offsetY<span class="token punctuation">,</span> <span class="token punctuation">(</span>mBitmap<span class="token punctuation">.</span>height <span class="token operator">*</span> bigScale <span class="token operator">-</span> height<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>                scaleAnimator<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                scaleAnimator<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">inner</span> <span class="token keyword">class</span> RefreshRunnable<span class="token operator">:</span>Runnable<span class="token punctuation">&#123;</span>        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>overScroller<span class="token punctuation">.</span><span class="token function">computeScrollOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                offsetX <span class="token operator">=</span> overScroller<span class="token punctuation">.</span>currX<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                offsetY <span class="token operator">=</span> overScroller<span class="token punctuation">.</span>currY<span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token function">invalidate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                ViewCompat<span class="token punctuation">.</span><span class="token function">postOnAnimation</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token label symbol">@SecondView</span><span class="token punctuation">,</span> refreshRunnable<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">inner</span> <span class="token keyword">class</span> ScaleGestureListener<span class="token operator">:</span>ScaleGestureDetector<span class="token punctuation">.</span><span class="token function">SimpleOnScaleGestureListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 一但开始双指捏合操作会被频繁调用 如果返回true detector.scaleFactor的值为当前的两只手指距离的比和前一次被调用的时候且返回为true的时候两只手距离的比（大概是这个意思 可以自己去试一试）</span>        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onScale</span><span class="token punctuation">(</span>detector<span class="token operator">:</span> ScaleGestureDetector<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>            <span class="token keyword">val</span> tempCurScale <span class="token operator">=</span> curScale<span class="token operator">*</span>detector<span class="token punctuation">.</span>scaleFactor            <span class="token keyword">return</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>tempCurScale<span class="token operator">&lt;</span> smallScale<span class="token operator">||</span>tempCurScale<span class="token operator">></span>bigScale<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token boolean">false</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                curScale <span class="token operator">*=</span> detector<span class="token punctuation">.</span>scaleFactor                <span class="token boolean">true</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>            <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onScaleBegin</span><span class="token punctuation">(</span>detector<span class="token operator">:</span> ScaleGestureDetector<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>            offsetX <span class="token operator">=</span> <span class="token punctuation">(</span>detector<span class="token punctuation">.</span>focusX<span class="token operator">-</span>width<span class="token operator">/</span><span class="token number">2f</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>bigScale<span class="token operator">/</span>smallScale<span class="token punctuation">)</span>            offsetY <span class="token operator">=</span> <span class="token punctuation">(</span>detector<span class="token punctuation">.</span>focusY<span class="token operator">-</span>height<span class="token operator">/</span><span class="token number">2f</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>bigScale<span class="token operator">/</span>smallScale<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">true</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onScaleEnd</span><span class="token punctuation">(</span>detector<span class="token operator">:</span> ScaleGestureDetector<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onScaleEnd</span><span class="token punctuation">(</span>detector<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> view </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>扩展子View触摸区域</title>
      <link href="/2022/12cf7e524a.html"/>
      <url>/2022/12cf7e524a.html</url>
      
        <content type="html"><![CDATA[<h2 id="通过TouchDelegate-扩展子view的触摸区域"><a href="#通过TouchDelegate-扩展子view的触摸区域" class="headerlink" title="通过TouchDelegate 扩展子view的触摸区域"></a>通过TouchDelegate 扩展子view的触摸区域</h2><p>最近学自定义view看到源码有一段</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">if</span> <span class="token punctuation">(</span>mTouchDelegate <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>mTouchDelegate<span class="token punctuation">.</span><span class="token function">onTouchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>经过查询TouchDelegate是用来代理子View的触摸区域的<br>所以我们就有了下面这个方法</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token comment">/** * 作用 扩展父view的子view的触摸区域 * * @param childView 子view * @param leftOffset 左偏移量 单位是px * 以此类推 */</span><span class="token keyword">fun</span> View<span class="token punctuation">.</span><span class="token function">expandChildTouchArea</span><span class="token punctuation">(</span>    childView<span class="token operator">:</span> View<span class="token punctuation">,</span>    leftOffset<span class="token operator">:</span> Int<span class="token punctuation">,</span>    topOffset<span class="token operator">:</span> Int<span class="token punctuation">,</span>    rightOffset<span class="token operator">:</span> Int<span class="token punctuation">,</span>    bottomOffset<span class="token operator">:</span> Int<span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    post <span class="token punctuation">&#123;</span>        <span class="token keyword">val</span> bounds <span class="token operator">=</span> <span class="token function">Rect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">//  获取子view在父view的相对位置</span>        childView<span class="token punctuation">.</span><span class="token function">getHitRect</span><span class="token punctuation">(</span>bounds<span class="token punctuation">)</span>        bounds<span class="token punctuation">.</span>left <span class="token operator">-=</span> leftOffset        bounds<span class="token punctuation">.</span>top <span class="token operator">-=</span> topOffset        bounds<span class="token punctuation">.</span>right <span class="token operator">+=</span> rightOffset        bounds<span class="token punctuation">.</span>bottom <span class="token operator">+=</span> bottomOffset        <span class="token comment">//创建一个触摸代理对象 传入子view新的bounds 和 子view</span>        <span class="token keyword">val</span> touchDelegate <span class="token operator">=</span> <span class="token function">TouchDelegate</span><span class="token punctuation">(</span>bounds<span class="token punctuation">,</span>childView<span class="token punctuation">)</span>        <span class="token comment">//父view来代理子view的触摸</span>        <span class="token function">setTouchDelegate</span><span class="token punctuation">(</span>touchDelegate<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> view </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kotlin-Flow</title>
      <link href="/2022/12523e7d6c.html"/>
      <url>/2022/12523e7d6c.html</url>
      
        <content type="html"><![CDATA[<h2 id="Kotlin-Flow-是什么"><a href="#Kotlin-Flow-是什么" class="headerlink" title="Kotlin Flow 是什么"></a>Kotlin Flow 是什么</h2><p>Flow 库是在 Kotlin Coroutines 1.3.2 发布之后新增的库，也叫做异步的数据流，会按顺序发出值并完成，它是Kotlin协程的响应式API，是与响应式编程相结合的产物。</p><h2 id="flow的创建"><a href="#flow的创建" class="headerlink" title="flow的创建"></a>flow的创建</h2><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">public</span> <span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">flow</span><span class="token punctuation">(</span><span class="token annotation builtin">@BuilderInference</span> block<span class="token operator">:</span> <span class="token keyword">suspend</span> FlowCollector<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> Unit<span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token operator">=</span> <span class="token function">SafeFlow</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span><span class="token comment">// Named anonymous object</span><span class="token keyword">private</span> <span class="token keyword">class</span> SafeFlow<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">private</span> <span class="token keyword">val</span> block<span class="token operator">:</span> <span class="token keyword">suspend</span> FlowCollector<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> Unit<span class="token punctuation">)</span> <span class="token operator">:</span> AbstractFlow<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">override</span> <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">collectSafely</span><span class="token punctuation">(</span>collector<span class="token operator">:</span> FlowCollector<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        collector<span class="token punctuation">.</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>除此之外 kotlin 也提供了一系列的流的生成方式</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token comment">// 注意以下的flow 其实是 unsafeFlow</span><span class="token keyword">import</span> kotlinx<span class="token punctuation">.</span>coroutines<span class="token punctuation">.</span>flow<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>unsafeFlow <span class="token keyword">as</span> flow<span class="token comment">//本质上调用的是下面这个方法</span><span class="token comment">/** * An analogue of the [flow] builder that does not check the context of execution of the resulting flow. * Used in our own operators where we trust the context of invocations. */</span><span class="token annotation builtin">@PublishedApi</span><span class="token keyword">internal</span> <span class="token keyword">inline</span> <span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">unsafeFlow</span><span class="token punctuation">(</span><span class="token annotation builtin">@BuilderInference</span> <span class="token keyword">crossinline</span> block<span class="token operator">:</span> <span class="token keyword">suspend</span> FlowCollector<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> Unit<span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">object</span> <span class="token operator">:</span> Flow<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">override</span> <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">collect</span><span class="token punctuation">(</span>collector<span class="token operator">:</span> FlowCollector<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            collector<span class="token punctuation">.</span><span class="token function">block</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * Creates a _cold_ flow that produces a single value from the given functional type. */</span><span class="token annotation builtin">@FlowPreview</span><span class="token keyword">public</span> <span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> T<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token operator">=</span> flow <span class="token punctuation">&#123;</span>    <span class="token function">emit</span><span class="token punctuation">(</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/** * Creates a _cold_ flow that produces a single value from the given functional type. * * Example of usage: * * ``` * suspend fun remoteCall(): R = ... * fun remoteCallFlow(): Flow&lt;R> = ::remoteCall.asFlow() * ``` */</span><span class="token annotation builtin">@FlowPreview</span><span class="token keyword">public</span> <span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">suspend</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> T<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token operator">=</span> flow <span class="token punctuation">&#123;</span>    <span class="token function">emit</span><span class="token punctuation">(</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/** * Creates a _cold_ flow that produces values from the given iterable. */</span><span class="token keyword">public</span> <span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> Iterable<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">.</span><span class="token function">asFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token operator">=</span> flow <span class="token punctuation">&#123;</span>    forEach <span class="token punctuation">&#123;</span> value <span class="token operator">-></span>        <span class="token function">emit</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * Creates a _cold_ flow that produces values from the given iterator. */</span><span class="token keyword">public</span> <span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> Iterator<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">.</span><span class="token function">asFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token operator">=</span> flow <span class="token punctuation">&#123;</span>    forEach <span class="token punctuation">&#123;</span> value <span class="token operator">-></span>        <span class="token function">emit</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * Creates a _cold_ flow that produces values from the given sequence. */</span><span class="token keyword">public</span> <span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> Sequence<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">.</span><span class="token function">asFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token operator">=</span> flow <span class="token punctuation">&#123;</span>    forEach <span class="token punctuation">&#123;</span> value <span class="token operator">-></span>        <span class="token function">emit</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * Creates a flow that produces values from the specified `vararg`-arguments. * * Example of usage: * * ``` * flowOf(1, 2, 3) * ``` */</span><span class="token keyword">public</span> <span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">flowOf</span><span class="token punctuation">(</span><span class="token keyword">vararg</span> elements<span class="token operator">:</span> T<span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token operator">=</span> flow <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>element <span class="token keyword">in</span> elements<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">emit</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * Creates a flow that produces the given [value]. */</span><span class="token keyword">public</span> <span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">flowOf</span><span class="token punctuation">(</span>value<span class="token operator">:</span> T<span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token operator">=</span> flow <span class="token punctuation">&#123;</span>    <span class="token comment">/*     * Implementation note: this is just an "optimized" overload of flowOf(vararg)     * which significantly reduces the footprint of widespread single-value flows.     */</span>    <span class="token function">emit</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/** * Returns an empty flow. */</span><span class="token keyword">public</span> <span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token function">emptyFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token operator">=</span> EmptyFlow<span class="token keyword">private</span> <span class="token keyword">object</span> EmptyFlow <span class="token operator">:</span> Flow<span class="token operator">&lt;</span>Nothing<span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">override</span> <span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">collect</span><span class="token punctuation">(</span>collector<span class="token operator">:</span> FlowCollector<span class="token operator">&lt;</span>Nothing<span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=</span> Unit<span class="token punctuation">&#125;</span><span class="token comment">/** * Creates a _cold_ flow that produces values from the given array. * The flow being _cold_ means that the array components are read every time a terminal operator is applied * to the resulting flow. */</span><span class="token keyword">public</span> <span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> Array<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">.</span><span class="token function">asFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token operator">=</span> flow <span class="token punctuation">&#123;</span>    forEach <span class="token punctuation">&#123;</span> value <span class="token operator">-></span>        <span class="token function">emit</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * Creates a _cold_ flow that produces values from the array. * The flow being _cold_ means that the array components are read every time a terminal operator is applied * to the resulting flow. */</span><span class="token keyword">public</span> <span class="token keyword">fun</span> IntArray<span class="token punctuation">.</span><span class="token function">asFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>Int<span class="token operator">></span> <span class="token operator">=</span> flow <span class="token punctuation">&#123;</span>    forEach <span class="token punctuation">&#123;</span> value <span class="token operator">-></span>        <span class="token function">emit</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * Creates a _cold_ flow that produces values from the given array. * The flow being _cold_ means that the array components are read every time a terminal operator is applied * to the resulting flow. */</span><span class="token keyword">public</span> <span class="token keyword">fun</span> LongArray<span class="token punctuation">.</span><span class="token function">asFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>Long<span class="token operator">></span> <span class="token operator">=</span> flow <span class="token punctuation">&#123;</span>    forEach <span class="token punctuation">&#123;</span> value <span class="token operator">-></span>        <span class="token function">emit</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * Creates a flow that produces values from the range. */</span><span class="token keyword">public</span> <span class="token keyword">fun</span> IntRange<span class="token punctuation">.</span><span class="token function">asFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>Int<span class="token operator">></span> <span class="token operator">=</span> flow <span class="token punctuation">&#123;</span>    forEach <span class="token punctuation">&#123;</span> value <span class="token operator">-></span>        <span class="token function">emit</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/** * Creates a flow that produces values from the range. */</span><span class="token keyword">public</span> <span class="token keyword">fun</span> LongRange<span class="token punctuation">.</span><span class="token function">asFlow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Flow<span class="token operator">&lt;</span>Long<span class="token operator">></span> <span class="token operator">=</span> flow <span class="token punctuation">&#123;</span>    forEach <span class="token punctuation">&#123;</span> value <span class="token operator">-></span>        <span class="token function">emit</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></br><blockquote><p>需要注意的是</p><ul><li>Flow创建的流是冷流 必须要在调用末端操作符后才会执行数据流生产操作。</li><li>flow代码块的emit函数是线程不安全的，不应该在flow内部使用withContext等函数进行上下文切换后使用emit函数，否则会抛出 IllegalStateException</li><li>如果想要修改flow的协程调度应该使用flowOn函数</li></ul></blockquote></br>  <h2 id="数据的消费-collect"><a href="#数据的消费-collect" class="headerlink" title="数据的消费 collect"></a>数据的消费 collect</h2><p>上述我们说到 冷流必须在调用末端操作符之后才会执行数据流生产操作 那么collect就是末端操作符之一。<br>下面举一个简单的例子</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token comment">//repository</span><span class="token keyword">object</span> Repository <span class="token punctuation">&#123;</span>    <span class="token keyword">fun</span> <span class="token function">fetchMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> flow<span class="token operator">&lt;</span>Result<span class="token operator">></span> <span class="token punctuation">&#123;</span>        <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>        <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            i <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                i<span class="token operator">=</span><span class="token number">0</span>            <span class="token punctuation">&#125;</span>            <span class="token function">emit</span><span class="token punctuation">(</span>Result<span class="token punctuation">.</span><span class="token function">Success</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">/</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">catch</span> <span class="token punctuation">&#123;</span> error<span class="token operator">-></span>        <span class="token function">emit</span><span class="token punctuation">(</span>Result<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">sealed</span> <span class="token keyword">interface</span>  Result <span class="token punctuation">&#123;</span>        <span class="token keyword">object</span> Loading <span class="token operator">:</span> Result        <span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Success</span><span class="token punctuation">(</span><span class="token keyword">val</span> <span class="token keyword">data</span><span class="token operator">:</span>Int<span class="token punctuation">)</span> <span class="token operator">:</span> Result        <span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token keyword">val</span> err<span class="token operator">:</span> Throwable<span class="token punctuation">)</span> <span class="token operator">:</span> Result    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// viewModel</span><span class="token keyword">class</span> <span class="token function">MyViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">ViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> _messageFlow <span class="token operator">=</span> Repository<span class="token punctuation">.</span><span class="token function">fetchMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">onStart</span> <span class="token punctuation">&#123;</span>            <span class="token function">emit</span><span class="token punctuation">(</span>Repository<span class="token punctuation">.</span>Result<span class="token punctuation">.</span>Loading<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">flowOn</span><span class="token punctuation">(</span>Dispatchers<span class="token punctuation">.</span>IO<span class="token punctuation">)</span>    <span class="token keyword">val</span> messageFlow<span class="token operator">:</span>Flow<span class="token operator">&lt;</span>Repository<span class="token punctuation">.</span>Result<span class="token operator">></span>        <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> _messageFlow<span class="token punctuation">&#125;</span><span class="token comment">// activity</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span>        mBinding <span class="token operator">=</span>  DataBindingUtil<span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span>        lifecycleScope<span class="token punctuation">.</span><span class="token function">launchWhenStarted</span> <span class="token punctuation">&#123;</span>                mModel<span class="token punctuation">.</span>messageFlow<span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">when</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        Repository<span class="token punctuation">.</span>Result<span class="token punctuation">.</span>Loading<span class="token operator">-></span><span class="token punctuation">&#123;</span>                            <span class="token comment">// 展示进度条</span>                        <span class="token punctuation">&#125;</span>                        <span class="token keyword">is</span> Repository<span class="token punctuation">.</span>Result<span class="token punctuation">.</span>Success<span class="token operator">-></span><span class="token punctuation">&#123;</span>                            <span class="token comment">// 将数据展示到页面上</span>                        <span class="token punctuation">&#125;</span>                        <span class="token keyword">is</span> Repository<span class="token punctuation">.</span>Result<span class="token punctuation">.</span>Error <span class="token operator">-></span> <span class="token punctuation">&#123;</span>                            <span class="token comment">// 弹出提示框</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>需要注意的是</p><ul><li>关于flowOn，只会作用于上游数据流。flow默认继承外层协程作用域的上下文 。例如上面的代码中 flowOn上游的操作是在IO线程执行的而collect之间的操作是在主线程执行的。</li><li>上述的lifecycleScope.launchWhenStarted 是会将Flow数据流消费端所在的协程，函数执行限定在Lifecycle.State.STARTED状态之后。当生命周期处于后台的时候会将消费端协程挂起。但是生产端的数据仍然在执行。为了解决这个问题 有了repeatOnLifecycle</li><li>repeatOnLifecycle的作用 切换CoroutineContext到主线程，在进入允许的生命周期状态时，启动协程，订阅数据流。在超出设定的生命周期状态后，关闭协程，取消订阅。</li></ul></blockquote><p>上述代码可以改成</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">lifecycleScope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">&#123;</span>    <span class="token function">repeatOnLifecycle</span><span class="token punctuation">(</span>Lifecycle<span class="token punctuation">.</span>State<span class="token punctuation">.</span>STARTED<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        mModel<span class="token punctuation">.</span>messageFlow<span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">&#123;</span>            <span class="token keyword">when</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                Repository<span class="token punctuation">.</span>Result<span class="token punctuation">.</span>Loading<span class="token operator">-></span><span class="token punctuation">&#123;</span>                    <span class="token comment">// 展示进度条</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">is</span> Repository<span class="token punctuation">.</span>Result<span class="token punctuation">.</span>Success<span class="token operator">-></span><span class="token punctuation">&#123;</span>                    <span class="token comment">// 将数据展示到页面上</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">is</span> Repository<span class="token punctuation">.</span>Result<span class="token punctuation">.</span>Error <span class="token operator">-></span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// 弹出提示框</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当然 也可以在视图层仍然使用livedata 对于已经构建好的flow  </p><h2 id="flow-转化成-livedata"><a href="#flow-转化成-livedata" class="headerlink" title="flow 转化成 livedata"></a>flow 转化成 livedata</h2><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token annotation builtin">@JvmOverloads</span><span class="token keyword">public</span> <span class="token keyword">fun</span> <span class="token operator">&lt;</span>T<span class="token operator">></span> Flow<span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">.</span><span class="token function">asLiveData</span><span class="token punctuation">(</span>    context<span class="token operator">:</span> CoroutineContext <span class="token operator">=</span> EmptyCoroutineContext<span class="token punctuation">,</span>    timeoutInMs<span class="token operator">:</span> Long <span class="token operator">=</span> DEFAULT_TIMEOUT<span class="token punctuation">)</span><span class="token operator">:</span> LiveData<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token operator">=</span> <span class="token function">liveData</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> timeoutInMs<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    collect <span class="token punctuation">&#123;</span>        <span class="token function">emit</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="热流-StateFlow-和-SharedFlow"><a href="#热流-StateFlow-和-SharedFlow" class="headerlink" title="热流 StateFlow 和 SharedFlow"></a>热流 StateFlow 和 SharedFlow</h2><p>StateFlow实际上是SharedFlow的子类，同样也拥有只读与可读可写的两种类型，StateFlow与MutableStateFlow。我们可以先看一下StateFlow和Livedata的对比  </p><blockquote><p>相同点：</p><ul><li>都允许多个消费者</li><li>都有只读与可变类型</li><li>永远只保存一个状态值</li><li>同样支持DataBinding</li></ul></blockquote><blockquote><p>StateFlow的不同之处：</p><ul><li>CAS</li><li>强制要求初始默认值</li><li>默认支持防抖过滤 基本类型比较值是否相同 对象的记得重写equal</li><li>value的空安全校验</li><li>有着Flow丰富的异步数据流操作</li><li>默认没有Lifecycle支持，flow的collect是挂起函数，会一直等待数据流传递数据 可以使用repeatOnLifecycle来弥补</li><li>线程安全，LiveData的postValue虽然也可在异步使用，但会导致数据丢失。</li></ul></blockquote><p>再来看SharedFlow 和 StateFlow的对比</p><p>相同点</p><blockquote><ul><li>与 SateFlow 一样，SharedFlow 也有两个版本：SharedFlow 与 MutableSharedFlow。</li></ul></blockquote><p>不同点</p><blockquote><ul><li>MutableSharedFlow 没有起始值</li><li>SharedFlow 可以保留历史数据 StateFlow只保存最新的状态值</li><li>MutableSharedFlow 发射值需要调用 emit()&#x2F;tryEmit() 方法，没有 setValue() 方法</li><li>一般情况下 StateFlow用于UI 而Shared用于事件</li></ul></blockquote><h2 id="使用SharedFlow-避免粘性事件"><a href="#使用SharedFlow-避免粘性事件" class="headerlink" title="使用SharedFlow 避免粘性事件"></a>使用SharedFlow 避免粘性事件</h2><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token comment">// viewModel</span><span class="token keyword">class</span> <span class="token function">MyViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">ViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">val</span> _sharedFlow <span class="token operator">=</span> MutableSharedFlow<span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">val</span> sharedFlow<span class="token operator">:</span>SharedFlow<span class="token operator">&lt;</span>String<span class="token operator">></span>    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> _sharedFlow        <span class="token comment">//模拟登录事件</span>    <span class="token keyword">fun</span> <span class="token function">login</span><span class="token punctuation">(</span>str<span class="token operator">:</span>String<span class="token punctuation">)</span> <span class="token operator">=</span> viewModelScope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">&#123;</span>        _sharedFlow<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// activity</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span>        mBinding <span class="token operator">=</span>  DataBindingUtil<span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span>            lifecycleScope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">&#123;</span>                <span class="token function">repeatOnLifecycle</span><span class="token punctuation">(</span>Lifecycle<span class="token punctuation">.</span>State<span class="token punctuation">.</span>STARTED<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    mModel<span class="token punctuation">.</span>sharedFlow<span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">&#123;</span>                        it<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token label symbol">@MainActivity</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        mBinding<span class="token punctuation">.</span>mMessage<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">&#123;</span>            mModel<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"12345"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意点</p><ul><li>如果在这里使用StateFlow 或者 LiveData的话 当点击登录之后 会弹出一次Toast 如果此时屏幕发生翻转 activity重建的话 会取消订阅然后重新订阅该事件 由于StateFlow 和 LiveData 会保存一个最新值 此时订阅之后将会又收到该值导致又弹出一次Toast 然而SharedFlow 默认情况下是不会保存任何值的 所以重新订阅之后无法接收到之前已经发送过的值。也就解决的粘性事件。</li><li>所以 我觉得 liveData 和 StateFlow 更适用于状态的保存 而SharedFlow 适用于事件。</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kotlin </tag>
            
            <tag> coroutine </tag>
            
            <tag> Flow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二叉搜索树</title>
      <link href="/2022/107cab1e06.html"/>
      <url>/2022/107cab1e06.html</url>
      
        <content type="html"><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><blockquote><p>所谓二叉搜索树 又叫二叉排序树 二叉排序树的充分条件为 </p><ul><li>如果他的左子树不为空 则其左子树的所有节点的 VALUE 都小于 Root 的 VALUE</li><li>如果他的右子树不为空 则其右子树的所有节点的 VALUE 都大于 Root 的 VALUE</li><li>他的左右子树也都为二叉排序树</li></ul></blockquote><h2 id="定义一个节点"><a href="#定义一个节点" class="headerlink" title="定义一个节点"></a>定义一个节点</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">int</span> key<span class="token punctuation">;</span>           <span class="token comment">// 节点的key</span> <span class="token keyword">int</span> value<span class="token punctuation">;</span>        <span class="token comment">//节点的卫星数据</span> <span class="token class-name">Node</span> left<span class="token punctuation">;</span>        <span class="token comment">//此节点的左子节点，数据类型为Node</span> <span class="token class-name">Node</span> right<span class="token punctuation">;</span>       <span class="token comment">//此节点的右子节点，数据类型为Node</span>    <span class="token comment">//构造方法 </span><span class="token keyword">public</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>left<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">this</span><span class="token punctuation">.</span>right<span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二叉排序树的搜索"><a href="#二叉排序树的搜索" class="headerlink" title="二叉排序树的搜索"></a>二叉排序树的搜索</h2><p>查找非常方便</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">Node</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> key，<span class="token class-name">Node</span> root<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token comment">// 从树中按照key查找元素</span>    <span class="token class-name">Node</span> current <span class="token operator">=</span> root<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>current<span class="token punctuation">.</span>key<span class="token operator">!=</span> key<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">></span> current<span class="token punctuation">.</span>key<span class="token punctuation">)</span>            current <span class="token operator">=</span> current<span class="token punctuation">.</span>right<span class="token punctuation">;</span>        <span class="token keyword">else</span>            current <span class="token operator">=</span> current<span class="token punctuation">.</span>left<span class="token punctuation">;</span>            <span class="token comment">//如果子节点为空 说明该元素不存在</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> current<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二叉排序树的插入"><a href="#二叉排序树的插入" class="headerlink" title="二叉排序树的插入"></a>二叉排序树的插入</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">insertOneNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">,</span><span class="token class-name">Node</span> root<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token class-name">Node</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           root <span class="token operator">=</span> node<span class="token punctuation">;</span>           <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>       <span class="token class-name">Node</span> parent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>       <span class="token class-name">Node</span> cur <span class="token operator">=</span> root<span class="token punctuation">;</span>       <span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>key <span class="token operator">==</span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token comment">//不允许插入相同key的node</span>               <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>key <span class="token operator">></span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               parent <span class="token operator">=</span> cur<span class="token punctuation">;</span>               cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>left<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>               parent <span class="token operator">=</span> cur<span class="token punctuation">;</span>               cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>right<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span>       <span class="token keyword">if</span> <span class="token punctuation">(</span>parent<span class="token punctuation">.</span>key <span class="token operator">></span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           parent<span class="token punctuation">.</span>left <span class="token operator">=</span> node<span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>           parent<span class="token punctuation">.</span>right <span class="token operator">=</span> node<span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>       <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二叉排序树的删除"><a href="#二叉排序树的删除" class="headerlink" title="二叉排序树的删除"></a>二叉排序树的删除</h2><h3 id="只有左子树为空的情况"><a href="#只有左子树为空的情况" class="headerlink" title="只有左子树为空的情况"></a>只有左子树为空的情况</h3><blockquote><ul><li>当前节点根节点，删除后根节点为当前节点的右孩子节点</li><li>当前节点不是根节点，且当前节点是父亲节点的左孩子节点，则删除后父亲节点的左孩子节点为，当前节点的右孩子节点</li><li>当前节点不是根节点，且当前节点是父亲节点的右孩子节点，则删除后父亲节点的右孩子节点为，当前节点的右孩子节点</li></ul></blockquote><h3 id="只有右子树为空的情况"><a href="#只有右子树为空的情况" class="headerlink" title="只有右子树为空的情况"></a>只有右子树为空的情况</h3><blockquote><ul><li>当前节点根节点，删除后根节点为当前节点的左孩子节点</li><li>当前节点不是根节点，且当前节点是父亲节点的左孩子节点，则删除后父亲节点的左孩子节点为，当前节点的左孩子节点</li><li>当前节点不是根节点，且当前节点是父亲节点的右孩子节点，则删除后父亲节点的右孩子节点为，当前节点的左孩子节点</li></ul></blockquote><h3 id="左右子树都不为空的情况"><a href="#左右子树都不为空的情况" class="headerlink" title="左右子树都不为空的情况"></a>左右子树都不为空的情况</h3><blockquote><ul><li>找到要删除节点，右树最左边的节点或者找到左树最右边的节点，随便一个都可以，设该节点为target节点<br>那么将当前节点删除本质上为将target节点的key 和 卫星数据 给 当前节点 然后将 target节点删除 。</li><li>如果找到的是右树最左边的节点为target 则(伪代码) target的左子树为空 target.parent.left &#x3D; target.right</li><li>如果找到的是左树的最右边的节点为 target 则(伪代码) target的右子树为空 target.parent.right &#x3D; target.left</li></ul></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">removeKeyNode</span><span class="token punctuation">(</span><span class="token keyword">int</span> key<span class="token punctuation">,</span><span class="token class-name">Node</span> root<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>       <span class="token class-name">Node</span> parent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>       <span class="token class-name">Node</span> cur <span class="token operator">=</span> root<span class="token punctuation">;</span>       <span class="token keyword">while</span> <span class="token punctuation">(</span>cur <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>key <span class="token operator">==</span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               <span class="token function">removeNode</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span>cur<span class="token punctuation">,</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>key <span class="token operator">&lt;</span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               parent <span class="token operator">=</span> cur<span class="token punctuation">;</span>               cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>right<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>               parent <span class="token operator">=</span> cur<span class="token punctuation">;</span>               cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>left<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span>       <span class="token comment">//没有找到需要删除的节点</span>       <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">removeNode</span><span class="token punctuation">(</span><span class="token class-name">Node</span> parent<span class="token punctuation">,</span><span class="token class-name">Node</span> cur<span class="token punctuation">,</span><span class="token class-name">Node</span> root<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token comment">// 左子树为空的情况 </span>       <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token keyword">if</span><span class="token punctuation">(</span>cur <span class="token operator">==</span> root<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               root <span class="token operator">=</span> root<span class="token punctuation">.</span>right<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>cur <span class="token operator">==</span> parent<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               parent<span class="token punctuation">.</span>left <span class="token operator">=</span> cur<span class="token punctuation">.</span>right<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>               parent<span class="token punctuation">.</span>right <span class="token operator">=</span> cur<span class="token punctuation">.</span>right<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>           <span class="token comment">// 右子树为空的情况</span>       <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token keyword">if</span><span class="token punctuation">(</span>root <span class="token operator">==</span> cur<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               root <span class="token operator">=</span> root<span class="token punctuation">.</span>left<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>cur <span class="token operator">==</span> parent<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               parent<span class="token punctuation">.</span>left <span class="token operator">=</span> cur<span class="token punctuation">.</span>left<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>               parent<span class="token punctuation">.</span>right <span class="token operator">=</span> cur<span class="token punctuation">.</span>left<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>           <span class="token comment">// 左右都不为空的情况 这里选择为找右子树的最左边的节点 也就是右子树的最小值</span>           <span class="token class-name">Node</span> targetParent <span class="token operator">=</span> cur<span class="token punctuation">;</span>           <span class="token class-name">Node</span> target <span class="token operator">=</span> cur<span class="token punctuation">.</span>right<span class="token punctuation">;</span>           <span class="token keyword">while</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>               targetParent <span class="token operator">=</span> target<span class="token punctuation">;</span>               target <span class="token operator">=</span> target<span class="token punctuation">.</span>left<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>           <span class="token comment">//将target的key和数据给当前需要删除的节点</span>           cur<span class="token punctuation">.</span>key <span class="token operator">=</span> target<span class="token punctuation">.</span>key<span class="token punctuation">;</span>           <span class="token comment">// cur.value  = target.value 卫星数据更换</span>          targetParent<span class="token punctuation">.</span>left <span class="token operator">=</span> target<span class="token punctuation">.</span>right<span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>activity重建后临时数据的恢复</title>
      <link href="/2022/10ccd9b9cd.html"/>
      <url>/2022/10ccd9b9cd.html</url>
      
        <content type="html"><![CDATA[<h2 id="正常启动生命周期"><a href="#正常启动生命周期" class="headerlink" title="正常启动生命周期"></a>正常启动生命周期</h2><pre class="line-numbers language-log" data-language="log"><code class="language-log"><span class="token date number">2022-10-13</span> <span class="token time number">15:06:22.779</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onCreate<span class="token date number">2022-10-13</span> <span class="token time number">15:06:22.834</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onStart<span class="token date number">2022-10-13</span> <span class="token time number">15:06:22.836</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onResume<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="启动后跳转到其他页面-并且activity在后台被销毁"><a href="#启动后跳转到其他页面-并且activity在后台被销毁" class="headerlink" title="启动后跳转到其他页面 并且activity在后台被销毁"></a>启动后跳转到其他页面 并且activity在后台被销毁</h2><pre class="line-numbers language-log" data-language="log"><code class="language-log"><span class="token date number">2022-10-13</span> <span class="token time number">15:06:22.779</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onCreate<span class="token date number">2022-10-13</span> <span class="token time number">15:06:22.834</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onStart<span class="token date number">2022-10-13</span> <span class="token time number">15:06:22.836</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onResume<span class="token date number">2022-10-13</span> <span class="token time number">15:07:30.618</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onSaveInstanceState<span class="token date number">2022-10-13</span> <span class="token time number">15:07:30.641</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onDestroy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="启动后跳转到其他页面-activity被销毁-返回到销毁后重建的activity"><a href="#启动后跳转到其他页面-activity被销毁-返回到销毁后重建的activity" class="headerlink" title="启动后跳转到其他页面 activity被销毁 返回到销毁后重建的activity"></a>启动后跳转到其他页面 activity被销毁 返回到销毁后重建的activity</h2><pre class="line-numbers language-log" data-language="log"><code class="language-log"><span class="token date number">2022-10-13</span> <span class="token time number">15:06:22.779</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onCreate<span class="token date number">2022-10-13</span> <span class="token time number">15:06:22.834</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onStart<span class="token date number">2022-10-13</span> <span class="token time number">15:06:22.836</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onResume<span class="token date number">2022-10-13</span> <span class="token time number">15:07:30.618</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onSaveInstanceState<span class="token date number">2022-10-13</span> <span class="token time number">15:07:30.641</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onDestroy<span class="token date number">2022-10-13</span> <span class="token time number">15:09:02.936</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onCreate<span class="token date number">2022-10-13</span> <span class="token time number">15:09:02.982</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onStart<span class="token date number">2022-10-13</span> <span class="token time number">15:09:02.983</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onRestoreInstanceState<span class="token date number">2022-10-13</span> <span class="token time number">15:09:02.986</span> <span class="token number">15547</span><span class="token operator">-</span><span class="token number">15547</span><span class="token operator">/</span>com<span class="token punctuation">.</span>wuhongru<span class="token punctuation">.</span>workman E<span class="token operator">/</span>error<span class="token operator">:</span> onResume<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="重点关注"><a href="#重点关注" class="headerlink" title="重点关注"></a>重点关注</h2><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onSaveInstanceState</span><span class="token punctuation">(</span>outState<span class="token operator">:</span> Bundle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onSaveInstanceState</span><span class="token punctuation">(</span>outState<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onRestoreInstanceState</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onRestoreInstanceState</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="一套简单流程"><a href="#一套简单流程" class="headerlink" title="一套简单流程"></a>一套简单流程</h2><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> mBinding<span class="token operator">:</span> ActivityMainBinding<span class="token keyword">private</span> <span class="token keyword">val</span> mModel<span class="token operator">:</span> MyViewModel <span class="token keyword">by</span> <span class="token function">viewModels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span>    mBinding <span class="token operator">=</span> DataBindingUtil<span class="token punctuation">.</span><span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span>    mBinding<span class="token punctuation">.</span>edit<span class="token punctuation">.</span><span class="token function">addTextChangedListener</span> <span class="token punctuation">&#123;</span>        mModel<span class="token punctuation">.</span>editString<span class="token punctuation">.</span><span class="token function">postValue</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>savedInstanceState <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        mBinding<span class="token punctuation">.</span>edit<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"edit"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onSaveInstanceState</span><span class="token punctuation">(</span>outState<span class="token operator">:</span> Bundle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onSaveInstanceState</span><span class="token punctuation">(</span>outState<span class="token punctuation">)</span>outState<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"edit"</span></span><span class="token punctuation">,</span> mModel<span class="token punctuation">.</span>editString<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onRestoreInstanceState</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onRestoreInstanceState</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span>mBinding<span class="token punctuation">.</span>edit<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"edit"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="关于-onSaveInstanceState-outState-Bundle"><a href="#关于-onSaveInstanceState-outState-Bundle" class="headerlink" title="关于 onSaveInstanceState(outState: Bundle)"></a>关于 onSaveInstanceState(outState: Bundle)</h2><blockquote><p>onSaveInstanceState() 方法 在activity意外死亡 如内存不足 按下Home键的时候会调用 但是在用户手动销毁 如按下返回键的时候并不会调用。  </p></blockquote><blockquote><p>总结为 系统销毁调用 用户主观销毁不调用 </p></blockquote><h2 id="关于-onRestoreInstanceState-savedInstanceState-Bundle"><a href="#关于-onRestoreInstanceState-savedInstanceState-Bundle" class="headerlink" title="关于 onRestoreInstanceState(savedInstanceState: Bundle)"></a>关于 onRestoreInstanceState(savedInstanceState: Bundle)</h2><blockquote><p>onSaveInstanceState方法和onRestoreInstanceState方法“不一定”是成对的被调用的。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> kotlin </tag>
            
            <tag> activity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初学WorkManager</title>
      <link href="/2022/10ef9bfce9.html"/>
      <url>/2022/10ef9bfce9.html</url>
      
        <content type="html"><![CDATA[<h2 id="workmanager-特点"><a href="#workmanager-特点" class="headerlink" title="workmanager 特点"></a>workmanager 特点</h2>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> kotlin </tag>
            
            <tag> jetpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>activity统一堆栈管理</title>
      <link href="/2022/10e5818ced.html"/>
      <url>/2022/10e5818ced.html</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><ul><li>在写用户登出的时候考虑到finish多个activity很麻烦所以考虑对其进行统一管理</li></ul><h2 id="AppManager"><a href="#AppManager" class="headerlink" title="AppManager"></a>AppManager</h2><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">class</span> AppManager <span class="token punctuation">&#123;</span>    <span class="token keyword">companion</span> <span class="token keyword">object</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token keyword">val</span> activityStack <span class="token operator">=</span> LinkedList<span class="token operator">&lt;</span>Activity<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">fun</span> <span class="token function">addActivity</span><span class="token punctuation">(</span>activity<span class="token operator">:</span> Activity<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            activityStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">fun</span> <span class="token function">finishOneActivity</span><span class="token punctuation">(</span>activityName<span class="token operator">:</span> String<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>activity <span class="token keyword">in</span> activityStack<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">val</span> name <span class="token operator">=</span> activity<span class="token punctuation">.</span>javaClass<span class="token punctuation">.</span>name                <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span> activityName<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>activity<span class="token punctuation">.</span>isFinishing<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        activityStack<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                        activity<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">fun</span> <span class="token function">finishOtherActivity</span><span class="token punctuation">(</span>activityName<span class="token operator">:</span> String<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>activity <span class="token keyword">in</span> activityStack<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">val</span> name <span class="token operator">=</span> activity<span class="token punctuation">.</span>javaClass<span class="token punctuation">.</span>name <span class="token comment">//activity的类名</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">!=</span> activityName<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>activity<span class="token punctuation">.</span>isFinishing<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        activityStack<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                        activity<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">fun</span> <span class="token function">finishAllActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>activity <span class="token keyword">in</span> activityStack<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>activity<span class="token punctuation">.</span>isFinishing<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    activity<span class="token punctuation">.</span><span class="token function">finish</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            activityStack<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">fun</span> <span class="token function">removeActivity</span><span class="token punctuation">(</span>activity<span class="token operator">:</span> Activity<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            activityStack<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="BaseActivity"><a href="#BaseActivity" class="headerlink" title="BaseActivity"></a>BaseActivity</h2><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">open</span> <span class="token keyword">class</span> BaseActivity<span class="token operator">:</span><span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span>        AppManager<span class="token punctuation">.</span><span class="token function">addActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        AppManager<span class="token punctuation">.</span><span class="token function">removeActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> activity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快排和归并排序java实现</title>
      <link href="/2022/09cd69f814.html"/>
      <url>/2022/09cd69f814.html</url>
      
        <content type="html"><![CDATA[<h2 id="快排-java实现"><a href="#快排-java实现" class="headerlink" title="快排 java实现"></a>快排 java实现</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java">    <span class="token keyword">public</span> <span class="token keyword">class</span> 快排 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> s <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">343</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>       <span class="token function">quikSort</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">quikSort</span><span class="token punctuation">(</span><span class="token keyword">int</span> low<span class="token punctuation">,</span><span class="token keyword">int</span> high<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> mList<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>low<span class="token operator">>=</span>high<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">int</span> start <span class="token operator">=</span> low<span class="token punctuation">;</span>        <span class="token keyword">int</span> end <span class="token operator">=</span> high<span class="token punctuation">;</span>        <span class="token keyword">int</span> flag <span class="token operator">=</span> mList<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>low<span class="token operator">&lt;</span>high<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">while</span><span class="token punctuation">(</span>low<span class="token operator">&lt;</span>high<span class="token operator">&amp;&amp;</span>mList<span class="token punctuation">[</span>high<span class="token punctuation">]</span><span class="token operator">>=</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    high<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>low<span class="token operator">&lt;</span>high<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">int</span> temp <span class="token operator">=</span> mList<span class="token punctuation">[</span>low<span class="token punctuation">]</span><span class="token punctuation">;</span>                mList<span class="token punctuation">[</span>low<span class="token punctuation">]</span> <span class="token operator">=</span> mList<span class="token punctuation">[</span>high<span class="token punctuation">]</span><span class="token punctuation">;</span>                mList<span class="token punctuation">[</span>high<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">while</span><span class="token punctuation">(</span>low<span class="token operator">&lt;</span>high<span class="token operator">&amp;&amp;</span>mList<span class="token punctuation">[</span>low<span class="token punctuation">]</span><span class="token operator">&lt;=</span>flag<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    low<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>low<span class="token operator">&lt;</span>high<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">int</span> temp <span class="token operator">=</span> mList<span class="token punctuation">[</span>low<span class="token punctuation">]</span><span class="token punctuation">;</span>                mList<span class="token punctuation">[</span>low<span class="token punctuation">]</span> <span class="token operator">=</span> mList<span class="token punctuation">[</span>high<span class="token punctuation">]</span><span class="token punctuation">;</span>                mList<span class="token punctuation">[</span>high<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">quikSort</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> low<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> mList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">quikSort</span><span class="token punctuation">(</span>low<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">,</span> mList<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="归并排序-java实现"><a href="#归并排序-java实现" class="headerlink" title="归并排序 java实现"></a>归并排序 java实现</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> 归并排序 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> s <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">343</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token function">mergeSort</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> s<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">:</span>s<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">mergeSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> list<span class="token punctuation">,</span><span class="token keyword">int</span> start<span class="token punctuation">,</span><span class="token keyword">int</span> end<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">int</span>  mid <span class="token operator">=</span> <span class="token punctuation">(</span>start<span class="token operator">+</span>end<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>start<span class="token operator">>=</span>end<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">mergeSort</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> start<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">mergeSort</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>end<span class="token operator">-</span>start<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span>  i<span class="token operator">=</span>start<span class="token punctuation">,</span>j<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token operator">&amp;&amp;</span>j<span class="token operator">&lt;=</span>end<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span>list<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                temp<span class="token punctuation">[</span>k<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>list<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                temp<span class="token punctuation">[</span>k<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>list<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>i<span class="token operator">&lt;=</span>mid<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            temp<span class="token punctuation">[</span>k<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>list<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>j<span class="token operator">&lt;=</span>end<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            temp<span class="token punctuation">[</span>k<span class="token operator">++</span><span class="token punctuation">]</span><span class="token operator">=</span>list<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>m<span class="token operator">&lt;</span>temp<span class="token punctuation">.</span>length<span class="token punctuation">;</span>m<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            list<span class="token punctuation">[</span>m<span class="token operator">+</span>start<span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android-ktx</title>
      <link href="/2022/086175a088.html"/>
      <url>/2022/086175a088.html</url>
      
        <content type="html"><![CDATA[<h2 id="lifecycleScope"><a href="#lifecycleScope" class="headerlink" title="lifecycleScope"></a>lifecycleScope</h2><p> 引入依赖</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">implementation <span class="token string-literal singleline"><span class="token string">"androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>每一个lifecycleOwner实例都有一个lifecycleScope，该作用域下协程的生命周期与其对应的activity，fragment等生命周期绑定，会在lifecycle被销毁时取消。  </p><p>使用</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">lifecycleScope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// TODO:  </span>        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><ul><li>使用了 SupervisorJob  </li><li>默认运行在主线程</li></ul></blockquote><p>查看源码</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">public</span> <span class="token keyword">val</span> LifecycleOwner<span class="token punctuation">.</span>lifecycleScope<span class="token operator">:</span> LifecycleCoroutineScope    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> lifecycle<span class="token punctuation">.</span>coroutineScope<span class="token keyword">public</span> <span class="token keyword">val</span> Lifecycle<span class="token punctuation">.</span>coroutineScope<span class="token operator">:</span> LifecycleCoroutineScope    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">val</span> existing <span class="token operator">=</span> mInternalScopeRef<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> LifecycleCoroutineScopeImpl<span class="token operator">?</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>existing <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> existing            <span class="token punctuation">&#125;</span>            <span class="token keyword">val</span> newScope <span class="token operator">=</span> <span class="token function">LifecycleCoroutineScopeImpl</span><span class="token punctuation">(</span>                <span class="token keyword">this</span><span class="token punctuation">,</span>                <span class="token function">SupervisorJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> Dispatchers<span class="token punctuation">.</span>Main<span class="token punctuation">.</span>immediate            <span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>mInternalScopeRef<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> newScope<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                newScope<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> newScope            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>源码注释</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token comment">/** * [CoroutineScope] tied to this [LifecycleOwner]'s [Lifecycle]. * * This scope will be cancelled when the [Lifecycle] is destroyed. * * This scope is bound to * [Dispatchers.Main.immediate][kotlinx.coroutines.MainCoroutineDispatcher.immediate]. */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="viewModelScope"><a href="#viewModelScope" class="headerlink" title="viewModelScope"></a>viewModelScope</h2><p>添加依赖</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">implementation <span class="token string-literal singleline"><span class="token string">"androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><ul><li>当viewModel销毁时销毁</li><li>默认运行在主线程</li></ul></blockquote><p>源码</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token comment">/** * [CoroutineScope] tied to this [ViewModel]. * This scope will be canceled when ViewModel will be cleared, i.e [ViewModel.onCleared] is called * * This scope is bound to * [Dispatchers.Main.immediate][kotlinx.coroutines.MainCoroutineDispatcher.immediate] */</span><span class="token keyword">public</span> <span class="token keyword">val</span> ViewModel<span class="token punctuation">.</span>viewModelScope<span class="token operator">:</span> CoroutineScope    <span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">val</span> scope<span class="token operator">:</span> CoroutineScope<span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getTag</span><span class="token punctuation">(</span>JOB_KEY<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>scope <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> scope        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token function">setTagIfAbsent</span><span class="token punctuation">(</span>            JOB_KEY<span class="token punctuation">,</span>            <span class="token function">CloseableCoroutineScope</span><span class="token punctuation">(</span><span class="token function">SupervisorJob</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> Dispatchers<span class="token punctuation">.</span>Main<span class="token punctuation">.</span>immediate<span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token keyword">internal</span> <span class="token keyword">class</span> <span class="token function">CloseableCoroutineScope</span><span class="token punctuation">(</span>context<span class="token operator">:</span> CoroutineContext<span class="token punctuation">)</span> <span class="token operator">:</span> Closeable<span class="token punctuation">,</span> CoroutineScope <span class="token punctuation">&#123;</span>    <span class="token keyword">override</span> <span class="token keyword">val</span> coroutineContext<span class="token operator">:</span> CoroutineContext <span class="token operator">=</span> context    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        coroutineContext<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">suspend</span> <span class="token keyword">fun</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    viewModelScope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// TODO:  </span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> kotlin </tag>
            
            <tag> coroutine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在activity中获取View的宽高</title>
      <link href="/2022/0795e36f3.html"/>
      <url>/2022/0795e36f3.html</url>
      
        <content type="html"><![CDATA[<p>View的measure过程和Activity的生命周期方法不是同步执行的，因此无法保证Activity执行了onCreate、onStart、onResume时某个View已经测量完毕了，如果View没有测量完毕，那么获得的宽高就是0。下面介绍几种获取宽高的方法。  </p><h3 id="Activity-x2F-View的onWindowFocusChanged"><a href="#Activity-x2F-View的onWindowFocusChanged" class="headerlink" title="Activity&#x2F;View的onWindowFocusChanged"></a>Activity&#x2F;View的onWindowFocusChanged</h3><p>onWindowFocusChanged这个方法的含义是：View已经初始化完毕，宽高已经准备好了，这个时候去获取宽高是没有问题的。需要注意的是，onWindowFocusChanged会被调用多次，当Activity的窗口得到焦点和失去焦点的时候都会被调用一次。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onWindowFocusChanged</span><span class="token punctuation">(</span><span class="token keyword">boolean</span> hasFocus<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onWindowFocusChanged</span><span class="token punctuation">(</span>hasFocus<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasFocus<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> width <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">getMeasuredWith</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> height <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="view-post-runnable"><a href="#view-post-runnable" class="headerlink" title="view.post(runnable)"></a>view.post(runnable)</h3><p>通过post可以将一个runnable投递到消息队列的尾部，然后等待Looper调用此runnable的时候，View也已经初始化好了。为什么view这个时候已经初始化好了呢，具体可以看下这位大佬的博客 <a href="https://juejin.cn/post/6895735092438630407">https://juejin.cn/post/6895735092438630407</a></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    view<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> width <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> height <span class="token operator">=</span> view<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ViewTreeObserver"><a href="#ViewTreeObserver" class="headerlink" title="ViewTreeObserver"></a>ViewTreeObserver</h3><p>使用ViewTreeObserver的众多回调接口也可以，比如使用OnGlobalLayoutListener这个接口，当View树的状态发生改变或者View树内部的View的可见性发生改变的时候，onGlobalLayout方法将被回调，因此这是获取View的宽高一个很好的机会。值得注意的是，伴随着View树的状态改变等，onGlobalLayout会被多次调用。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">ViewTreeObserver</span> observer <span class="token operator">=</span> tv<span class="token punctuation">.</span><span class="token function">getViewTreeObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    observer<span class="token punctuation">.</span><span class="token function">addOnGlobalLayoutListener</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ViewTreeObserver<span class="token punctuation">.</span>OnGlobalLayoutListener</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token annotation punctuation">@Override</span>        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onGlobalLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            tv<span class="token punctuation">.</span><span class="token function">getViewTreeObserver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeOnGlobalLayoutListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> width <span class="token operator">=</span> tv<span class="token punctuation">.</span><span class="token function">getMeasuredWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> height <span class="token operator">=</span> tv<span class="token punctuation">.</span><span class="token function">getMeasuredHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> kotlin </tag>
            
            <tag> view </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AndroidUi单位转化工具类</title>
      <link href="/2022/0772d200a3.html"/>
      <url>/2022/0772d200a3.html</url>
      
        <content type="html"><![CDATA[<h2 id="常用单位转化"><a href="#常用单位转化" class="headerlink" title="常用单位转化"></a>常用单位转化</h2><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context<span class="token keyword">import</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>TypedValue<span class="token keyword">object</span> DisplayUtils <span class="token punctuation">&#123;</span>    <span class="token keyword">fun</span> <span class="token function">dp2px</span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context <span class="token punctuation">,</span> dpVal<span class="token operator">:</span>Float<span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> TypedValue<span class="token punctuation">.</span><span class="token function">applyDimension</span><span class="token punctuation">(</span>TypedValue<span class="token punctuation">.</span>COMPLEX_UNIT_DIP<span class="token punctuation">,</span>dpVal<span class="token punctuation">,</span>context<span class="token punctuation">.</span>resources<span class="token punctuation">.</span>displayMetrics<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">fun</span> <span class="token function">sp2px</span><span class="token punctuation">(</span>context<span class="token operator">:</span>Context<span class="token punctuation">,</span>spVal<span class="token operator">:</span>Float<span class="token punctuation">)</span><span class="token operator">:</span>Int<span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> TypedValue<span class="token punctuation">.</span><span class="token function">applyDimension</span><span class="token punctuation">(</span>TypedValue<span class="token punctuation">.</span>COMPLEX_UNIT_SP<span class="token punctuation">,</span>spVal<span class="token punctuation">,</span>context<span class="token punctuation">.</span>resources<span class="token punctuation">.</span>displayMetrics<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">fun</span> <span class="token function">px2dp</span><span class="token punctuation">(</span>context<span class="token operator">:</span> Context<span class="token punctuation">,</span>pxValue<span class="token operator">:</span>Float<span class="token punctuation">)</span><span class="token operator">:</span>Int<span class="token punctuation">&#123;</span>        <span class="token keyword">val</span> scale <span class="token operator">=</span> context<span class="token punctuation">.</span>resources<span class="token punctuation">.</span>displayMetrics<span class="token punctuation">.</span>density        <span class="token keyword">return</span> <span class="token punctuation">(</span>pxValue<span class="token operator">/</span>scale<span class="token operator">+</span><span class="token number">0.5F</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">fun</span> <span class="token function">px2sp</span><span class="token punctuation">(</span>context<span class="token operator">:</span>Context<span class="token punctuation">,</span>pxValue<span class="token operator">:</span>Float<span class="token punctuation">)</span><span class="token operator">:</span>Int<span class="token punctuation">&#123;</span>        <span class="token keyword">val</span> fontScale <span class="token operator">=</span> context<span class="token punctuation">.</span>resources<span class="token punctuation">.</span>displayMetrics<span class="token punctuation">.</span>scaledDensity        <span class="token keyword">return</span> <span class="token punctuation">(</span>pxValue<span class="token operator">/</span>fontScale <span class="token operator">+</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> kotlin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Room的基本使用</title>
      <link href="/2022/0757a8c014.html"/>
      <url>/2022/0757a8c014.html</url>
      
        <content type="html"><![CDATA[<h2 id="依赖导入-kotlin项目"><a href="#依赖导入-kotlin项目" class="headerlink" title="依赖导入 kotlin项目"></a>依赖导入 kotlin项目</h2><pre class="line-numbers language-gradle" data-language="gradle"><code class="language-gradle"><span class="token keyword">plugins</span> <span class="token punctuation">&#123;</span>    id <span class="token string">'kotlin-kapt'</span><span class="token punctuation">&#125;</span><span class="token keyword">dependencies</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">def</span> room_version <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">"2.3.0"</span></span>    <span class="token keyword">implementation</span> <span class="token interpolation-string"><span class="token string">"androidx.room:room-runtime:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">room_version</span></span><span class="token string">"</span></span>    kapt <span class="token interpolation-string"><span class="token string">"androidx.room:room-compiler:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">room_version</span></span><span class="token string">"</span></span>    <span class="token keyword">implementation</span> <span class="token interpolation-string"><span class="token string">"androidx.room:room-ktx:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">room_version</span></span><span class="token string">"</span></span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h2><p>一个实体就是一张表 </p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>room<span class="token punctuation">.</span>ColumnInfo<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>room<span class="token punctuation">.</span>Entity<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>room<span class="token punctuation">.</span>PrimaryKey<span class="token annotation builtin">@Entity</span><span class="token punctuation">(</span>tableName <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">"user"</span></span><span class="token punctuation">)</span><span class="token keyword">data</span> <span class="token keyword">class</span> <span class="token function">Users</span><span class="token punctuation">(</span>    <span class="token annotation builtin">@ColumnInfo</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">"user"</span></span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">"wuHongRu"</span></span><span class="token punctuation">)</span>    <span class="token keyword">var</span> userName<span class="token operator">:</span> String <span class="token punctuation">,</span>    <span class="token annotation builtin">@ColumnInfo</span>    <span class="token keyword">var</span> password<span class="token operator">:</span> String<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token annotation builtin">@PrimaryKey</span><span class="token punctuation">(</span>autoGenerate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>    <span class="token annotation builtin">@ColumnInfo</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">"id"</span></span><span class="token punctuation">)</span>    <span class="token keyword">var</span> id<span class="token operator">:</span>Long <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Dao"><a href="#Dao" class="headerlink" title="Dao"></a>Dao</h2><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>room<span class="token punctuation">.</span>Dao<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>room<span class="token punctuation">.</span>Insert<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>room<span class="token punctuation">.</span>OnConflictStrategy<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>room<span class="token punctuation">.</span>Query<span class="token annotation builtin">@Dao</span><span class="token keyword">interface</span> UserDao <span class="token punctuation">&#123;</span>    <span class="token annotation builtin">@Insert</span><span class="token punctuation">(</span>onConflict <span class="token operator">=</span> OnConflictStrategy<span class="token punctuation">.</span>REPLACE<span class="token punctuation">,</span> entity <span class="token operator">=</span> Users<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">)</span>    <span class="token keyword">fun</span> <span class="token function">insertUser</span><span class="token punctuation">(</span><span class="token keyword">vararg</span> user<span class="token operator">:</span>Users<span class="token punctuation">)</span>    <span class="token annotation builtin">@Query</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"select * from user "</span></span><span class="token punctuation">)</span>    <span class="token keyword">fun</span> <span class="token function">loadAllUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>List<span class="token operator">&lt;</span>Users<span class="token operator">></span>    <span class="token annotation builtin">@Query</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"select * from user where userName = :name"</span></span><span class="token punctuation">)</span>    <span class="token keyword">fun</span> <span class="token function">selectOneUser</span><span class="token punctuation">(</span>name<span class="token operator">:</span>String<span class="token punctuation">)</span><span class="token operator">:</span>List<span class="token operator">&lt;</span>Users<span class="token operator">></span>    <span class="token annotation builtin">@Update</span>    <span class="token keyword">fun</span> <span class="token function">updateOneUser</span><span class="token punctuation">(</span>user<span class="token operator">:</span>Users<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Database"><a href="#Database" class="headerlink" title="Database"></a>Database</h2><p>设计成单例模式加同步锁 构造实例的时候要传入applicationContext 否则可能造成内存泄漏</p><blockquote><ul><li><strong>entities</strong> : 指定添加进来的数据库表，这里以数组形式添加，如果项目用到多个表可以用逗号隔开。  </li><li><strong>version</strong> : 当前数据库的版本号，当数据库升级的时候会用到 。</li><li><strong>exportSchema</strong> : 导出为文件模式，默认为true,这里要设置为false，不然会报警告。</li></ul></blockquote><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>room<span class="token punctuation">.</span>Database<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>room<span class="token punctuation">.</span>Room<span class="token keyword">import</span> androidx<span class="token punctuation">.</span>room<span class="token punctuation">.</span>RoomDatabase<span class="token annotation builtin">@Database</span><span class="token punctuation">(</span>version <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> entities <span class="token operator">=</span> <span class="token punctuation">[</span>Users<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">]</span><span class="token punctuation">,</span>exportSchema <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">abstract</span> <span class="token keyword">class</span> UserDatabase<span class="token operator">:</span><span class="token function">RoomDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">abstract</span> <span class="token keyword">fun</span> <span class="token function">userDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>UserDao    <span class="token keyword">companion</span> <span class="token keyword">object</span><span class="token punctuation">&#123;</span>        <span class="token keyword">private</span> <span class="token keyword">var</span> instance<span class="token operator">:</span>UserDatabase <span class="token operator">?</span><span class="token operator">=</span><span class="token keyword">null</span>        <span class="token annotation builtin">@Synchronized</span>        <span class="token keyword">fun</span> <span class="token function">getDataBase</span><span class="token punctuation">(</span>context<span class="token operator">:</span>Context<span class="token punctuation">)</span><span class="token operator">:</span>UserDatabase<span class="token punctuation">&#123;</span>            instance<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> it <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> Room<span class="token punctuation">.</span><span class="token function">databaseBuilder</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span>applicationContext<span class="token punctuation">,</span>UserDatabase<span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">.</span>java<span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">"user_database"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">&#123;</span>                    instance <span class="token operator">=</span> <span class="token keyword">this</span>                <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>创建统一仓库</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">class</span> <span class="token function">UserRepository</span><span class="token punctuation">(</span><span class="token keyword">private</span> <span class="token keyword">val</span> userDao<span class="token operator">:</span>UserDao<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//可变参数 本质为数组</span>    <span class="token keyword">fun</span> <span class="token function">insertUsers</span><span class="token punctuation">(</span><span class="token keyword">vararg</span> user<span class="token operator">:</span>Users<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        userDao<span class="token punctuation">.</span><span class="token function">insertUser</span><span class="token punctuation">(</span><span class="token operator">*</span>user<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">fun</span> <span class="token function">loadAllUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span>List<span class="token operator">&lt;</span>Users<span class="token operator">></span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> userDao<span class="token punctuation">.</span><span class="token function">loadAllUsers</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在activity中  默认不允许在主线程中操作数据库 在构建数据库的时候使用allowMainThreadQueries()可以在主线程中操作 但是仅建议测试环境下使用</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">private</span> <span class="token keyword">val</span> database <span class="token keyword">by</span> lazy <span class="token punctuation">&#123;</span> UserDatabase<span class="token punctuation">.</span><span class="token function">getDataBase</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token keyword">private</span> <span class="token keyword">val</span> repository <span class="token keyword">by</span> lazy <span class="token punctuation">&#123;</span> <span class="token function">UserRepository</span><span class="token punctuation">(</span>database<span class="token punctuation">.</span><span class="token function">userDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  mBinding<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">&#123;</span>      insert<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">&#123;</span>        lifecycleScope<span class="token punctuation">.</span><span class="token function">launch</span> <span class="token punctuation">&#123;</span>            <span class="token function">withContext</span><span class="token punctuation">(</span>Dispatchers<span class="token punctuation">.</span>IO<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                repository<span class="token punctuation">.</span><span class="token function">insertUsers</span><span class="token punctuation">(</span><span class="token function">Users</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"wuhongru"</span></span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">"232323"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据库升级"><a href="#数据库升级" class="headerlink" title="数据库升级"></a>数据库升级</h2><blockquote><ul><li>在Room构建数据库是通过addMigrations(Migration migrations)方法进行版本升级。</li><li>Migration(int startVersion, int endVersion)方法是指定从什么版本升级到哪一版本。</li><li>在重写的migrate(database: SupportSQLiteDatabase)方法中执行更新的sql语句。</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> kotlin </tag>
            
            <tag> Room </tag>
            
            <tag> jetpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RecyclerView之ItemDecoration使用</title>
      <link href="/2022/07a0f14887.html"/>
      <url>/2022/07a0f14887.html</url>
      
        <content type="html"><![CDATA[<p>主要方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDraw</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Canvas</span> c<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">RecyclerView</span> parent<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>State</span> state<span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onDrawOver</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Canvas</span> c<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">RecyclerView</span> parent<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>State</span> state<span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getItemOffsets</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Rect</span> outRect<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">View</span> view<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">RecyclerView</span> parent<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">RecyclerView<span class="token punctuation">.</span>State</span> state<span class="token punctuation">)</span> <span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> kotlin </tag>
            
            <tag> RecyclerView </tag>
            
            <tag> ItemDecoration </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SVGAImageView使用总结</title>
      <link href="/2022/073dd4e884.html"/>
      <url>/2022/073dd4e884.html</url>
      
        <content type="html"><![CDATA[<h2 id="依赖导入"><a href="#依赖导入" class="headerlink" title="依赖导入"></a>依赖导入</h2><pre class="line-numbers language-gradle" data-language="gradle"><code class="language-gradle">allprojects <span class="token punctuation">&#123;</span>    <span class="token keyword">repositories</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">...</span>        maven <span class="token punctuation">&#123;</span> url <span class="token string">'https://jitpack.io'</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-gradle" data-language="gradle"><code class="language-gradle"><span class="token keyword">implementation</span> <span class="token string">'com.github.yyued:SVGAPlayer-Android:latest'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="静态使用"><a href="#静态使用" class="headerlink" title="静态使用"></a>静态使用</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>com.opensource.svgaplayer.SVGAImageView</span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xxx.svga<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">app:</span>autoPlay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>    <span class="token attr-name"><span class="token namespace">android:</span>background</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#000<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> SVGA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android属性动画</title>
      <link href="/2022/07c521d2cf.html"/>
      <url>/2022/07c521d2cf.html</url>
      
        <content type="html"><![CDATA[<h2 id="ValueAnimator"><a href="#ValueAnimator" class="headerlink" title="ValueAnimator"></a>ValueAnimator</h2><h3 id="常用构造"><a href="#常用构造" class="headerlink" title="常用构造"></a>常用构造</h3><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">ValueAnimator<span class="token punctuation">.</span><span class="token function">ofInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//Int</span>ValueAnimator<span class="token punctuation">.</span><span class="token function">ofArgb</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//Int</span>ValueAnimator<span class="token punctuation">.</span><span class="token function">ofFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//Float</span>ValueAnimator<span class="token punctuation">.</span><span class="token function">ofObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment">//TypeEvaluator,object</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="开启一个动画"><a href="#开启一个动画" class="headerlink" title="开启一个动画"></a>开启一个动画</h3><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">val</span> anima <span class="token operator">=</span> ValueAnimator<span class="token punctuation">.</span><span class="token function">ofInt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">&#123;</span>    duration <span class="token operator">=</span> <span class="token number">3000</span>    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这样我们就开启了一个简单的动画 动画值在3000毫秒内从0过渡到1  </p></blockquote><h3 id="添加监听"><a href="#添加监听" class="headerlink" title="添加监听"></a>添加监听</h3><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">val</span> anima <span class="token operator">=</span> ValueAnimator<span class="token punctuation">.</span><span class="token function">ofInt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">&#123;</span>    duration <span class="token operator">=</span> <span class="token number">3000</span>    addUpdateListener <span class="token punctuation">&#123;</span>        <span class="token keyword">val</span> value <span class="token operator">=</span> it<span class="token punctuation">.</span>animatedValue <span class="token keyword">as</span> Int        Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"动画回调值"</span></span><span class="token punctuation">,</span>value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="更多设置"><a href="#更多设置" class="headerlink" title="更多设置"></a>更多设置</h3><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">val</span> anima <span class="token operator">=</span> ValueAnimator<span class="token punctuation">.</span><span class="token function">ofInt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">&#123;</span>    duration <span class="token operator">=</span> <span class="token number">3000</span>    addUpdateListener <span class="token punctuation">&#123;</span>        <span class="token keyword">val</span> value <span class="token operator">=</span> it<span class="token punctuation">.</span>animatedValue <span class="token keyword">as</span> Int        Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"动画回调值"</span></span><span class="token punctuation">,</span>value<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    startDelay <span class="token operator">=</span> <span class="token number">2000</span> <span class="token comment">//设置延迟播放时间 会在start（）执行之后延迟该时间后开启动画</span>    repeatCount <span class="token operator">=</span> <span class="token number">2</span>  <span class="token comment">//设置循环播放次数</span>    repeatMode <span class="token operator">=</span> ValueAnimator<span class="token punctuation">.</span>RESTART <span class="token comment">//设置循环播放模式 从头播放</span>    repeatMode <span class="token operator">=</span> ValueAnimator<span class="token punctuation">.</span>REVERSE<span class="token comment">//倒序播放</span>    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>！！注意 实际播放动画的总次数为1+repeatCount  如果设置了倒序播放只会在第偶数次播放的时候倒序</p></blockquote><h3 id="ValueAnimator-ofObject-和-TypeEvaluator-接口"><a href="#ValueAnimator-ofObject-和-TypeEvaluator-接口" class="headerlink" title="ValueAnimator.ofObject() 和 TypeEvaluator 接口"></a>ValueAnimator.ofObject() 和 TypeEvaluator 接口</h3><p>TypeEvaluator  实现该接口从而设置动画从开始到结束的过渡方式</p><p>来看一下基本使用</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">val</span> anima <span class="token operator">=</span> ValueAnimator<span class="token punctuation">.</span><span class="token function">ofObject</span><span class="token punctuation">(</span><span class="token keyword">object</span> <span class="token operator">:</span>TypeEvaluator<span class="token operator">&lt;</span>Int<span class="token operator">></span><span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">0F</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">evaluate</span><span class="token punctuation">(</span>fraction<span class="token operator">:</span> Float <span class="token punctuation">,</span> startValue<span class="token operator">:</span> Int<span class="token operator">?</span> <span class="token punctuation">,</span> endValue<span class="token operator">:</span> Int<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">&#123;</span>            x<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token keyword">val</span> start <span class="token operator">=</span> startValue <span class="token keyword">as</span> Int            <span class="token keyword">return</span>  <span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span>start<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">&#123;</span>    addUpdateListener <span class="token punctuation">&#123;</span>        Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"wuhongru"</span></span><span class="token punctuation">,</span>it<span class="token punctuation">.</span>animatedValue<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这里我们往fObject()里面传入了三个参数   </p><ul><li>第一个是实现了TypeEvalutor接口的匿名类的实例  </li><li>第二个参数是 startValue 会在evaluate中回调  </li><li>第三个参数是 endValue 会在evalua中回调  </li><li>TyepeEvaluator的泛型要传入我们后面传入的 startValue对应的类型  </li><li>evaluate方法中 fraction表示动画进度的百分比是一个Float类型  返回值为动画当前进度对应的值，可以自己设置</li></ul></blockquote><blockquote><p>这个动画的结果应该是在动画时间内打印x大于零时的y&#x3D;x^2 的y值<br>打印结果</p></blockquote><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token number">2022</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">16</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">38.929</span> <span class="token number">4405</span><span class="token operator">-</span><span class="token number">4405</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>test2 E<span class="token operator">/</span>wuhongru<span class="token operator">:</span> <span class="token number">1</span><span class="token number">2022</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">16</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">38.963</span> <span class="token number">4405</span><span class="token operator">-</span><span class="token number">4405</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>test2 E<span class="token operator">/</span>wuhongru<span class="token operator">:</span> <span class="token number">4</span><span class="token number">2022</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">16</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">39.142</span> <span class="token number">4405</span><span class="token operator">-</span><span class="token number">4405</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>test2 E<span class="token operator">/</span>wuhongru<span class="token operator">:</span> <span class="token number">9</span><span class="token number">2022</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">16</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">39.151</span> <span class="token number">4405</span><span class="token operator">-</span><span class="token number">4405</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>test2 E<span class="token operator">/</span>wuhongru<span class="token operator">:</span> <span class="token number">16</span><span class="token number">2022</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">16</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">39.162</span> <span class="token number">4405</span><span class="token operator">-</span><span class="token number">4405</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>test2 E<span class="token operator">/</span>wuhongru<span class="token operator">:</span> <span class="token number">25</span><span class="token number">2022</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">16</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">39.191</span> <span class="token number">4405</span><span class="token operator">-</span><span class="token number">4405</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>test2 E<span class="token operator">/</span>wuhongru<span class="token operator">:</span> <span class="token number">36</span><span class="token number">2022</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">16</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">39.208</span> <span class="token number">4405</span><span class="token operator">-</span><span class="token number">4405</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>test2 E<span class="token operator">/</span>wuhongru<span class="token operator">:</span> <span class="token number">49</span><span class="token number">2022</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">16</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">39.225</span> <span class="token number">4405</span><span class="token operator">-</span><span class="token number">4405</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>test2 E<span class="token operator">/</span>wuhongru<span class="token operator">:</span> <span class="token number">64</span><span class="token number">2022</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">16</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">39.242</span> <span class="token number">4405</span><span class="token operator">-</span><span class="token number">4405</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>test2 E<span class="token operator">/</span>wuhongru<span class="token operator">:</span> <span class="token number">81</span><span class="token number">2022</span><span class="token operator">-</span><span class="token number">07</span><span class="token operator">-</span><span class="token number">16</span> <span class="token number">17</span><span class="token operator">:</span><span class="token number">17</span><span class="token operator">:</span><span class="token number">39.259</span> <span class="token number">4405</span><span class="token operator">-</span><span class="token number">4405</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>test2 E<span class="token operator">/</span>wuhongru<span class="token operator">:</span> <span class="token number">100</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="在自定义view运用"><a href="#在自定义view运用" class="headerlink" title="在自定义view运用"></a>在自定义view运用</h3><blockquote><p>TODO:2022 7. 16</p></blockquote><h2 id="ObjectAnimator"><a href="#ObjectAnimator" class="headerlink" title="ObjectAnimator"></a>ObjectAnimator</h2><blockquote><p> 可以对任意对象的任意属性进行动画操作 同样可以传入TypeEvalutor</p></blockquote><h2 id="组合动画"><a href="#组合动画" class="headerlink" title="组合动画"></a>组合动画</h2><blockquote><p>AnimatorSet类</p><ul><li>play(Animator anim)  传入将要播放的动画</li><li>after(Animator anim)  将现有动画插入到传入的动画之后执行</li><li>after(long delay)   将现有动画延迟指定毫秒后执行</li><li>before(Animator anim) 将现有动画插入到传入的动画之前执行</li><li>with(Animator anim) 将现有动画和传入的动画同时执行</li><li>playSequentially(Animator… items)  逐个播放动画，可变长参数，参数为需要执行的动画</li><li>playSequentially(List<Animator> items) 逐个播放动画，参数为需要执行的动画的集合</li><li>playTogether(Animator… items) 同时开启动画，参数是可变长参数，参数为需要执行的动画</li><li>playTogether(Collection<Animator> items)       同时开启动画，参数是动画合集</li></ul></blockquote><h2 id="Interpolator"><a href="#Interpolator" class="headerlink" title="Interpolator"></a>Interpolator</h2><blockquote><p>补间器 控制动画的变化速率<br>sdk有提供其实现类<br>通过实现TimeInterpolator接口来自定义动画变化速率  </p></blockquote><h2 id="ViewPropertyAnimator"><a href="#ViewPropertyAnimator" class="headerlink" title="ViewPropertyAnimator"></a>ViewPropertyAnimator</h2><p>通过View.animate()<br>返回一个ViewPropertyAnimator实例从而可以对属性进行动画操作。<br><a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator?hl=en">ViewPropertyAnimator官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> kotlin </tag>
            
            <tag> 属性动画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLite使用总结</title>
      <link href="/2022/07d1b7c989.html"/>
      <url>/2022/07d1b7c989.html</url>
      
        <content type="html"><![CDATA[<h3 id="SQLite数据类型"><a href="#SQLite数据类型" class="headerlink" title="SQLite数据类型"></a>SQLite数据类型</h3><table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>INTEGER</td><td>值是一个带符号的整数。</td></tr><tr><td>NULL</td><td>值是一个NULL值</td></tr><tr><td>REAL</td><td>值是一个浮点值</td></tr><tr><td>TEXT</td><td>值是一个文本字符串</td></tr><tr><td>BLOB</td><td>二进制对象</td></tr></tbody></table><h3 id="SQLite约束条件"><a href="#SQLite约束条件" class="headerlink" title="SQLite约束条件"></a>SQLite约束条件</h3><table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>NOT NULL</td><td>确保该列不能有NULL</td></tr><tr><td>DEFAULT</td><td>当该列没有指定值的时候设置为默认值</td></tr><tr><td>UNIQUE</td><td>确保该列的值是不同的</td></tr><tr><td>PRIMARY KEY</td><td>主键</td></tr><tr><td>FOREIGN KEY</td><td>外键</td></tr><tr><td>CHECK</td><td>确保该列所有值满足所约束的条件</td></tr></tbody></table><h3 id="对表的操作"><a href="#对表的操作" class="headerlink" title="对表的操作"></a>对表的操作</h3><h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><pre class="line-numbers language-none"><code class="language-none">create table tablename( 字段名 类型 约束...)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><pre class="line-numbers language-none"><code class="language-none">drop table if exists tablename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="修改表名称"><a href="#修改表名称" class="headerlink" title="修改表名称"></a>修改表名称</h4><pre class="line-numbers language-none"><code class="language-none">ALTER TABLE oldtablename RENAME TO newtablename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="表添加新列"><a href="#表添加新列" class="headerlink" title="表添加新列"></a>表添加新列</h4><pre class="line-numbers language-none"><code class="language-none">ALTER TABLE 表名 ADD COLUMN 列名 数据类型 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h3><h4 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h4><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token comment">//values 不为null</span>db<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"tablename"</span></span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span>values<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h4><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">db<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"tablename"</span></span><span class="token punctuation">,</span>values<span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">"条件"</span></span><span class="token punctuation">,</span><span class="token function">arrayof</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"对应占位符的列名字段的数据"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">db<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"tablename"</span></span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">"条件"</span></span><span class="token punctuation">,</span><span class="token function">arrayof</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"条件中对应占位符的数据"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h4><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin">db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span>参数比较多 我喜欢直接写sql语句<span class="token keyword">val</span> cursor<span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">rawQuery</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"查询语句"</span></span><span class="token punctuation">,</span><span class="token function">arrayof</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"条件中对应占位符的数据"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><h3 id="升级数据库"><a href="#升级数据库" class="headerlink" title="升级数据库"></a>升级数据库</h3>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> kotlin </tag>
            
            <tag> SQLite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git常用指令总结</title>
      <link href="/2022/075626bfa5.html"/>
      <url>/2022/075626bfa5.html</url>
      
        <content type="html"><![CDATA[<p>把学过的指令总结一下 方便查询</p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><pre class="line-numbers language-none"><code class="language-none">git init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="添加文件到暂存区"><a href="#添加文件到暂存区" class="headerlink" title="添加文件到暂存区"></a>添加文件到暂存区</h3><pre class="line-numbers language-none"><code class="language-none">git add &lt;filepattern&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>filepattern 中 既可以写文件名的路径 也可以使用通配符 也可以是子目录<br></br><br>添加所有已更改文件</p><pre class="line-numbers language-none"><code class="language-none">git add .<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="显示工作树状态"><a href="#显示工作树状态" class="headerlink" title="显示工作树状态"></a>显示工作树状态</h3><pre class="line-numbers language-none"><code class="language-none">git status [options]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>详细参数请看<br><a href="https://git-scm.com/docs/git-status/zh_HANS-CN">https://git-scm.com/docs/git-status/zh_HANS-CN</a></p><h3 id="提交暂存区的文件"><a href="#提交暂存区的文件" class="headerlink" title="提交暂存区的文件"></a>提交暂存区的文件</h3><pre class="line-numbers language-none"><code class="language-none">git commit -m &quot;提交信息&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="查看文件差异"><a href="#查看文件差异" class="headerlink" title="查看文件差异"></a>查看文件差异</h3><p>显示暂存区和工作区的差异</p><pre class="line-numbers language-none"><code class="language-none">git diff [file]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>显示暂存区和上一次提交的差异</p><pre class="line-numbers language-none"><code class="language-none">git diff --staged [file]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="显示提交记录"><a href="#显示提交记录" class="headerlink" title="显示提交记录"></a>显示提交记录</h3><pre class="line-numbers language-none"><code class="language-none">git show<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="撤销工作区还未提交到暂存区的修改"><a href="#撤销工作区还未提交到暂存区的修改" class="headerlink" title="撤销工作区还未提交到暂存区的修改"></a>撤销工作区还未提交到暂存区的修改</h3><pre class="line-numbers language-none"><code class="language-none">git restore [file]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="将暂存区的文件从暂存区取出-但是不更改工作区的状态"><a href="#将暂存区的文件从暂存区取出-但是不更改工作区的状态" class="headerlink" title="将暂存区的文件从暂存区取出 但是不更改工作区的状态"></a>将暂存区的文件从暂存区取出 但是不更改工作区的状态</h3><pre class="line-numbers language-none"><code class="language-none">git restore --staged [file]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h2><h3 id="显示分支列表-并且表明当前处于哪一分支"><a href="#显示分支列表-并且表明当前处于哪一分支" class="headerlink" title="显示分支列表 并且表明当前处于哪一分支"></a>显示分支列表 并且表明当前处于哪一分支</h3><pre class="line-numbers language-none"><code class="language-none">git branch&#x2F;&#x2F;git branch -a 还会追加列出远程分支<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h3><pre class="line-numbers language-none"><code class="language-none">git branch [name]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h3><pre class="line-numbers language-none"><code class="language-none">git branch -d [name]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h3><pre class="line-numbers language-none"><code class="language-none">git switch [name]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="修改分支名称"><a href="#修改分支名称" class="headerlink" title="修改分支名称"></a>修改分支名称</h3><pre class="line-numbers language-none"><code class="language-none">git branch -m [oldname] [newname]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;以name分支的改动为主 把当前分支与其合并git merge [name] &#x2F;&#x2F;建议使用一下方式合并分支git merge --no--ff [name]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="添加分支到远程"><a href="#添加分支到远程" class="headerlink" title="添加分支到远程"></a>添加分支到远程</h3><pre class="line-numbers language-none"><code class="language-none">git push --set-upstream origin 分支名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h2><h3 id="克隆现有的远程数据库到本地"><a href="#克隆现有的远程数据库到本地" class="headerlink" title="克隆现有的远程数据库到本地"></a>克隆现有的远程数据库到本地</h3><pre class="line-numbers language-none"><code class="language-none">git clone &lt;url&gt;&#x2F;&#x2F;会自动追踪远程数据库可以直接执行 push fetch&#x2F;pull 等操作而不用加repository<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="显示远程数据库列表"><a href="#显示远程数据库列表" class="headerlink" title="显示远程数据库列表"></a>显示远程数据库列表</h3><pre class="line-numbers language-none"><code class="language-none">git remote &#x2F;&#x2F;显示详细信息git remote -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="将修改推送到远程分支"><a href="#将修改推送到远程分支" class="headerlink" title="将修改推送到远程分支"></a>将修改推送到远程分支</h3><pre class="line-numbers language-none"><code class="language-none">git push<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="查看和读取远程分支的修改内容"><a href="#查看和读取远程分支的修改内容" class="headerlink" title="查看和读取远程分支的修改内容"></a>查看和读取远程分支的修改内容</h3><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;不保存到本地git fetch&#x2F;&#x2F;保存内容到本地git pull<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Git-Config"><a href="#Git-Config" class="headerlink" title="Git Config"></a>Git Config</h2><h3 id="设置用户名和邮箱"><a href="#设置用户名和邮箱" class="headerlink" title="设置用户名和邮箱"></a>设置用户名和邮箱</h3><pre class="line-numbers language-none"><code class="language-none">git config --global user.name [name]git config --global user.email [address]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h3><pre class="line-numbers language-none"><code class="language-none">git config --global http.proxy [代理主机地址]:[port]git config --global https.proxy [代理主机地址]:[port]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="取消代理"><a href="#取消代理" class="headerlink" title="取消代理"></a>取消代理</h3><pre class="line-numbers language-none"><code class="language-none">git config --global --unset http.proxygit config --global --unset https.proxy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><p>将未提交的修改推入栈顶 工作区回到上次提交之前的状态</p><pre class="line-numbers language-none"><code class="language-none">git stash <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>推荐使用 添加信息</p><pre class="line-numbers language-none"><code class="language-none">git stash save &quot;msg&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>看栈中保存的状态列表</p><pre class="line-numbers language-none"><code class="language-none">git stash list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>应用栈顶的修改 但是栈顶的记录还在</p><pre class="line-numbers language-none"><code class="language-none">git stash apply<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将栈顶推出 应用该修改</p><pre class="line-numbers language-none"><code class="language-none">git stash pop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 命令行 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>迷宫与陷阱</title>
      <link href="/2022/06e6e2221d.html"/>
      <url>/2022/06e6e2221d.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>小明在玩一款迷宫游戏，在游戏中他要控制自己的角色离开一间由NxN个格子组成的2D迷宫。<br>小明的起始位置在左上角，他需要到达右下角的格子才能离开迷宫。<br>每一步，他可以移动到上下左右相邻的格子中（前提是目标格子可以经过）。<br>迷宫中有些格子小明可以经过，我们用’.‘表示；<br>有些格子是墙壁，小明不能经过，我们用’#‘表示。<br>此外，有些格子上有陷阱，我们用’X’表示。除非小明处于无敌状态，否则不能经过。<br>有些格子上有无敌道具，我们用’%‘表示。<br>当小明第一次到达该格子时，自动获得无敌状态，无敌状态会持续K步。<br>之后如果再次到达该格子不会获得无敌状态了。<br>处于无敌状态时，可以经过有陷阱的格子，但是不会拆除&#x2F;毁坏陷阱，即陷阱仍会阻止没有无敌状态的角色经过。<br>给定迷宫，请你计算小明最少经过几步可以离开迷宫</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>输入包含多组测试数据，对于每组测试数据：<br>第一行包含两个整数N和K。 (1 &lt;&#x3D; N &lt;&#x3D; 1000 1 &lt;&#x3D; K &lt;&#x3D; 10)<br>以下N行包含一个NxN的矩阵。矩阵保证左上角和右下角是’.’。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每组测试数据输出一行包含一个整数表示答案。<br>如果小明不能离开迷宫，输出-1。</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><pre class="line-numbers language-none"><code class="language-none">5 3...XX##%#....#..###......<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><pre class="line-numbers language-none"><code class="language-none">10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><pre class="line-numbers language-none"><code class="language-none">本来看起来是一道很常规的BFS 但是这里存在一个无敌状态 以前是用二维数组保存走过的记录不再走，这里考虑使用三维数组来保存在无敌k时刻和不无敌的时候走过的记录。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">LinkedList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> 蓝桥杯国赛迷宫与陷阱 <span class="token punctuation">&#123;</span>     <span class="token keyword">static</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">></span></span> mylist <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> r <span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> c <span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> visited<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">1010</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1010</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> <span class="token class-name">K</span> <span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token class-name">N</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mylist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        visited<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span><span class="token function">bfs</span><span class="token punctuation">(</span><span class="token class-name">N</span><span class="token punctuation">,</span> <span class="token class-name">K</span><span class="token punctuation">,</span> graph<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>      <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token class-name">N</span><span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token class-name">K</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>mylist<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           <span class="token class-name">Node</span> mynode<span class="token operator">=</span>mylist<span class="token punctuation">.</span><span class="token function">removeFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token keyword">if</span><span class="token punctuation">(</span>mynode<span class="token punctuation">.</span>x<span class="token operator">==</span><span class="token class-name">N</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>mynode<span class="token punctuation">.</span>y<span class="token operator">==</span><span class="token class-name">N</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           <span class="token keyword">return</span> mynode<span class="token punctuation">.</span>bushu<span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>           <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">4</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>               <span class="token keyword">int</span> x1<span class="token operator">=</span>mynode<span class="token punctuation">.</span>x<span class="token operator">+</span>r<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>               <span class="token keyword">int</span> y1<span class="token operator">=</span>mynode<span class="token punctuation">.</span>y<span class="token operator">+</span>c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>               <span class="token keyword">int</span> k1<span class="token operator">=</span>mynode<span class="token punctuation">.</span>k<span class="token punctuation">;</span>               <span class="token keyword">int</span> steps <span class="token operator">=</span> mynode<span class="token punctuation">.</span>bushu<span class="token punctuation">;</span>               <span class="token keyword">if</span><span class="token punctuation">(</span>x1<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">||</span>x1<span class="token operator">>=</span><span class="token class-name">N</span><span class="token operator">||</span>y1<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">||</span>y1<span class="token operator">>=</span><span class="token class-name">N</span><span class="token operator">||</span>graph<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token operator">==</span><span class="token char">'#'</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token operator">==</span><span class="token char">'%'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    visited<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token class-name">K</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>                    mylist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> steps<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token class-name">K</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>k1<span class="token operator">></span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>visited<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token punctuation">[</span>k1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        visited<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token punctuation">[</span>k1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>                        mylist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> steps<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> k1<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>k1<span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>graph<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token operator">==</span><span class="token char">'.'</span><span class="token operator">&amp;&amp;</span>visited<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        visited<span class="token punctuation">[</span>x1<span class="token punctuation">]</span><span class="token punctuation">[</span>y1<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>                        mylist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> steps<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>           <span class="token punctuation">&#125;</span>         <span class="token punctuation">&#125;</span>       <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> x<span class="token punctuation">,</span>y<span class="token punctuation">;</span>        <span class="token keyword">int</span> bushu<span class="token punctuation">;</span>        <span class="token keyword">int</span> k<span class="token punctuation">;</span>       <span class="token keyword">public</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> bushu<span class="token punctuation">,</span><span class="token keyword">int</span> k<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token operator">=</span>x<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token operator">=</span>y<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>bushu<span class="token operator">=</span>bushu<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>k<span class="token operator">=</span>k<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
            <tag> java </tag>
            
            <tag> BFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯2021国赛javaB组题目详解</title>
      <link href="/2022/0555d61869.html"/>
      <url>/2022/0555d61869.html</url>
      
        <content type="html"><![CDATA[<h1 id="蓝桥杯2021国赛javaB组题目详解"><a href="#蓝桥杯2021国赛javaB组题目详解" class="headerlink" title="蓝桥杯2021国赛javaB组题目详解"></a>蓝桥杯2021国赛javaB组题目详解</h1></br><h2 id="第一题-整数范围"><a href="#第一题-整数范围" class="headerlink" title="第一题 整数范围"></a>第一题 整数范围</h2><p>问题描述</p><blockquote><p>用 8位二进制（一个字节）来表示一个非负整数，表示的最小值是 0，则一般能表示的最大值是多少？</p></blockquote><p>答案提交</p><blockquote><p>这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</p></blockquote><p>code</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> 蓝桥杯<span class="token number">2021</span>整数范围 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第二题-纯质数"><a href="#第二题-纯质数" class="headerlink" title="第二题 纯质数"></a>第二题 纯质数</h2><p>问题描述  </p><blockquote><p>如果一个正整数只有1和它本身两个约数，则称为一个质数（又称素数）。前几个质数是：2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37,…<br>如果一个质数的所有十进制数位都是质数，我们称它为纯质数。例如：2,3, 5, 7, 23, 37都是纯质数，而11, 13, 17, 19, 29, 31不是纯质数。当然1, 4, 35也不是纯质数。<br>请问，在1到20210605中，有多少个纯质数？</p></blockquote><p>答案提交</p><blockquote><p>这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</p></blockquote><p>code</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> 蓝桥杯<span class="token number">2021</span>纯质数 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span><span class="token number">20210605</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> mylist <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mylist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        mylist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token class-name">N</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>j<span class="token operator">*</span>j<span class="token operator">&lt;=</span>i<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">%</span>j<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">></span>i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    mylist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> test <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token char">'2'</span><span class="token punctuation">,</span><span class="token char">'3'</span><span class="token punctuation">,</span><span class="token char">'5'</span><span class="token punctuation">,</span><span class="token char">'7'</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> s <span class="token operator">:</span> mylist <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> flag<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">char</span> ch <span class="token operator">:</span>str<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">char</span> cht<span class="token operator">:</span>test<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>cht<span class="token operator">-</span>ch<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>cht<span class="token operator">-</span><span class="token char">'7'</span><span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>ch<span class="token operator">-</span><span class="token char">'7'</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        flag<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第三题-完全日期"><a href="#第三题-完全日期" class="headerlink" title="第三题 完全日期"></a>第三题 完全日期</h2><p>问题描述</p><blockquote><p>如果一个日期中年月日的各位数字之和是完全平方数，则称为一个完全日期。例如： 2021 年 6 月 5 日的各位数字之和为 2 + 0 + 2 + 1 + 6 + 5 &#x3D; 16，而16 是一个完全平方数，它是 4 的平方。所以 2021 年 6 月 5 日是一个完全日期。例如： 2021 年 6 月 23 日的各位数字之和为 2 + 0 + 2 + 1 + 6 + 2 + 3 &#x3D; 16，是一个完全平方数。所以 2021 年 6 月 23 日也是一个完全日期。<br>请问，从 2001 年 1 月 1 日到 2021 年 12 月 31 日中，一共有多少个完全日期？</p></blockquote><p>答案提交</p><blockquote><p>这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</p></blockquote><p>code</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDate</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> 蓝桥杯<span class="token number">2021</span>完全日期 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">LocalDate</span> t1 <span class="token operator">=</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2001</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">LocalDate</span> t2 <span class="token operator">=</span><span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>t1<span class="token punctuation">.</span><span class="token function">isBefore</span><span class="token punctuation">(</span>t2<span class="token punctuation">)</span><span class="token operator">||</span>t1<span class="token punctuation">.</span><span class="token function">isEqual</span><span class="token punctuation">(</span>t2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> a <span class="token operator">=</span> t1<span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> b <span class="token operator">=</span> t1<span class="token punctuation">.</span><span class="token function">getMonthValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> c <span class="token operator">=</span> t1<span class="token punctuation">.</span><span class="token function">getDayOfMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> d1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> a1 <span class="token operator">=</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> b1 <span class="token operator">=</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> c1 <span class="token operator">=</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">char</span> i<span class="token operator">:</span>a1<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                d1<span class="token operator">+=</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">getNumericValue</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">char</span> i<span class="token operator">:</span>b1<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                d1<span class="token operator">+=</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">getNumericValue</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">char</span> i<span class="token operator">:</span>c1<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                d1<span class="token operator">+=</span><span class="token class-name">Character</span><span class="token punctuation">.</span><span class="token function">getNumericValue</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">int</span> d2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>d1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>d1<span class="token operator">==</span><span class="token punctuation">(</span>d2<span class="token operator">*</span>d2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            t1<span class="token operator">=</span>t1<span class="token punctuation">.</span><span class="token function">plusDays</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第四题-最小权值"><a href="#第四题-最小权值" class="headerlink" title="第四题 最小权值"></a>第四题 最小权值</h2><p>问题描述</p><blockquote><p>对于一棵有根二叉树T，小蓝定义这棵树中结点的权值W(T)如下：空子树的权值为0。<br>如果一个结点v有左子树L,右子树R，分别有C(L)和C(R)个结点，则:<br>W(v) &#x3D; 1 + 2W(L) + 3W(R) +(C(L))2C(R)。<br>树的权值定义为树的根结点的权值。<br>小蓝想知道，对于一棵有2021个结点的二叉树，树的权值最小可能是多少？</p></blockquote><p>答案提交</p><blockquote><p>这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</p></blockquote><p>code</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//dp</span><span class="token keyword">public</span> <span class="token keyword">class</span> 蓝桥杯<span class="token number">2021</span>最小权值 <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token class-name">N</span><span class="token operator">=</span><span class="token number">2021</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token punctuation">]</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">long</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">dfs</span><span class="token punctuation">(</span><span class="token class-name">N</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">long</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> num<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>num<span class="token operator">==</span><span class="token number">0</span><span class="token operator">||</span>map<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> map<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">long</span> weight <span class="token operator">=</span><span class="token class-name">Long</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> lnum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>lnum<span class="token operator">&lt;</span>num<span class="token punctuation">;</span>lnum<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> rnum<span class="token operator">=</span>num<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>lnum<span class="token punctuation">;</span>            <span class="token keyword">long</span> midWeight <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span><span class="token function">dfs</span><span class="token punctuation">(</span>lnum<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3</span><span class="token operator">*</span><span class="token function">dfs</span><span class="token punctuation">(</span>rnum<span class="token punctuation">)</span><span class="token operator">+</span>lnum<span class="token operator">*</span>lnum<span class="token operator">*</span>rnum<span class="token punctuation">;</span>            weight <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>weight<span class="token punctuation">,</span> midWeight<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        map<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token operator">=</span>weight<span class="token punctuation">;</span>        <span class="token keyword">return</span> map<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第五题-大写"><a href="#第五题-大写" class="headerlink" title="第五题 大写"></a>第五题 大写</h2><p>问题描述</p><blockquote><p>给定一个只包含大写字母和小写字母的字符串，请将其中所有的小写字母转换成大写字母后将字符串输出。</p></blockquote><p>输入格式</p><blockquote><p>输入一行包含一个字符串</p></blockquote><p>输出格式</p><blockquote><p>输出转换成大写后的字符串。</p></blockquote><p>样例输入</p><pre class="line-numbers language-none"><code class="language-none">LanQiao<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>样例输出</p><pre class="line-numbers language-none"><code class="language-none">LANQIAO<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>评测用例规模与约定</p><pre class="line-numbers language-none"><code class="language-none">对于所有评测用例，字符串的长度不超过100。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>code</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> 蓝桥杯<span class="token number">2021</span>大写 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh打开vim按下ctrl+s后无法操作</title>
      <link href="/2022/059d5068b0.html"/>
      <url>/2022/059d5068b0.html</url>
      
        <content type="html"><![CDATA[<h2 id="ssh打开vim按下ctrl-s后无法操作"><a href="#ssh打开vim按下ctrl-s后无法操作" class="headerlink" title="ssh打开vim按下ctrl+s后无法操作"></a>ssh打开vim按下ctrl+s后无法操作</h2><blockquote><p>原因</p></blockquote><pre class="line-numbers language-none"><code class="language-none">习惯了windows操作 在vim中按下ctrl+s后 暂停了该终端<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>解决办法</p></blockquote><pre class="line-numbers language-none"><code class="language-none">ctrl+q 恢复<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>常见其他快捷键</p></blockquote><pre class="line-numbers language-none"><code class="language-none">ctrl+c 终止当前程序ctrl+d 退出会话ctrl+z 把当前运行的程序放到后台运行<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
            <tag> vim </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯2017国赛javaB组题目详解</title>
      <link href="/2022/05eb514289.html"/>
      <url>/2022/05eb514289.html</url>
      
        <content type="html"><![CDATA[<h1 id="蓝桥杯2017国赛javaB组题目详解"><a href="#蓝桥杯2017国赛javaB组题目详解" class="headerlink" title="蓝桥杯2017国赛javaB组题目详解"></a>蓝桥杯2017国赛javaB组题目详解</h1></br><h2 id="第一题-36进制"><a href="#第一题-36进制" class="headerlink" title="第一题 36进制"></a>第一题 36进制</h2><blockquote><p>题目描述</p></blockquote><pre class="line-numbers language-none"><code class="language-none">对于16进制，我们使用字母A-F来表示10及以上的数字。如法炮制，一直用到字母Z，就可以表示36进制。36进制中，A表示10，Z表示35，AA表示370你能算出 MANY 表示的数字用10进制表示是多少吗?请提交一个整数，不要填写任何多余的内容（比如，说明文字）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>代码</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> 蓝桥杯<span class="token number">2017</span>三十六进制 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token char">'M'</span><span class="token operator">-</span><span class="token char">'A'</span><span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">10</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token char">'N'</span><span class="token operator">-</span><span class="token char">'A'</span><span class="token operator">+</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">36</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token char">'Y'</span> <span class="token operator">-</span> <span class="token char">'A'</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯2016国赛javaB组题目详解</title>
      <link href="/2022/053649741b.html"/>
      <url>/2022/053649741b.html</url>
      
        <content type="html"><![CDATA[<h1 id="蓝桥杯2015国赛javaB组题目详解"><a href="#蓝桥杯2015国赛javaB组题目详解" class="headerlink" title="蓝桥杯2015国赛javaB组题目详解"></a>蓝桥杯2015国赛javaB组题目详解</h1><h2 id="第一题-一步之遥"><a href="#第一题-一步之遥" class="headerlink" title="第一题 一步之遥"></a>第一题 一步之遥</h2><blockquote><p>题目描述</p></blockquote><pre class="line-numbers language-none"><code class="language-none">从昏迷中醒来，小明发现自己被关在X星球的废矿车里。矿车停在平直的废弃的轨道上。他的面前是两个按钮，分别写着“F”和“B”。小明突然记起来，这两个按钮可以控制矿车在轨道上前进和后退。按F，会前进97米。按B会后退127米。透过昏暗的灯光，小明看到自己前方1米远正好有个监控探头。他必须设法使得矿车正好停在摄像头的下方，才有机会争取同伴的援助。或许，通过多次操作F和B可以办到。矿车上的动力已经不太足，黄色的警示灯在默默闪烁...每次进行 F 或 B 操作都会消耗一定的能量。小明飞快地计算，至少要多少次操作，才能把矿车准确地停在前方1米远的地方。请填写为了达成目标，最少需要操作的次数。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>输出格式</p></blockquote><pre class="line-numbers language-none"><code class="language-none">输出一个整数表示答案<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>代码</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> 蓝桥杯<span class="token number">2016</span>一步之遥 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> a<span class="token punctuation">,</span>b<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">*</span><span class="token number">97</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">127</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                a<span class="token operator">=</span>i<span class="token punctuation">;</span>                b<span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token operator">*</span><span class="token number">97</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">127</span><span class="token punctuation">;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第二题-凑平方数"><a href="#第二题-凑平方数" class="headerlink" title="第二题 凑平方数"></a>第二题 凑平方数</h2><blockquote><p>题目描述</p></blockquote><pre class="line-numbers language-none"><code class="language-none">把0~9这10个数字，分成多个组，每个组恰好是一个平方数，这是能够办到的。比如：0, 36, 5948721再比如：10985247361, 25, 63907840, 4, 289, 15376等等...注意，0可以作为独立的数字，但不能作为多位数字的开始。分组时，必须用完所有的数字，不能重复，不能遗漏。如果不计较小组内数据的先后顺序，请问有多少种不同的分组方案？<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>输出格式</p></blockquote><pre class="line-numbers language-none"><code class="language-none">输出一个整数表示答案<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>代码</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashSet</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> 蓝桥杯<span class="token number">2016</span>凑平方数 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">></span></span> num <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//得到范围内所有的平方数</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">long</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">*</span>i<span class="token operator">&lt;=</span><span class="token number">9876543210l</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">long</span> midi <span class="token operator">=</span> i<span class="token operator">*</span>i<span class="token punctuation">;</span>            <span class="token comment">//剔除有（0-9）重复数字的平方数</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isAlone</span><span class="token punctuation">(</span>midi<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                num<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>midi<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// System.out.println(midi);</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//进行排列组合</span>        <span class="token function">dfs</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> count <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list  <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">></span></span> mylist<span class="token punctuation">,</span><span class="token keyword">int</span> curlength<span class="token punctuation">,</span><span class="token keyword">int</span> cur<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>curlength<span class="token operator">==</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//关键判断，根据长度为10并且没有重复数字可以唯一确定其为所求组合之一</span>            <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token operator">:</span>list<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//每一个符合length=10条件的组合拼接在一起</span>                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>            <span class="token comment">//进行重复判断</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isAlone</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//确定符合 加一</span>                count<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token comment">// for(String s:list)&#123;</span>                <span class="token comment">//    System.out.print(s+" ");</span>                <span class="token comment">// &#125;</span>                <span class="token comment">// System.out.println();</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>curlength<span class="token operator">></span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//排列组合</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>cur<span class="token punctuation">;</span>i<span class="token operator">&lt;</span>mylist<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>mylist<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>list<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">dfs</span><span class="token punctuation">(</span>mylist<span class="token punctuation">,</span>curlength<span class="token operator">+</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                list<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//重载isAlone</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Boolean</span> <span class="token function">isAlone</span><span class="token punctuation">(</span><span class="token class-name">Long</span> num<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ch <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">></span></span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">char</span> c<span class="token operator">:</span>ch<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Boolean</span> <span class="token function">isAlone</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ch <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Character</span><span class="token punctuation">></span></span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">char</span> c<span class="token operator">:</span>ch<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第三题-机器人塔"><a href="#第三题-机器人塔" class="headerlink" title="第三题 机器人塔"></a>第三题 机器人塔</h2><blockquote><p>题目描述</p></blockquote><pre class="line-numbers language-none"><code class="language-none">X星球的机器人表演拉拉队有两种服装，A和B。他们这次表演的是搭机器人塔。类似：     A    B B   A B A  A A B B B B B A BA B A B B A队内的组塔规则是：    A 只能站在 AA 或 BB 的肩上。  B 只能站在 AB 或 BA 的肩上。你的任务是帮助拉拉队计算一下，在给定A与B的人数时，可以组成多少种花样的塔。输入一行两个整数 M 和 N，空格分开（0&lt;M,N&lt;500）,分别表示A、B的人数，保证人数合理性。要求输出一个整数，表示可以产生的花样种数。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>输入</p></blockquote><pre class="line-numbers language-none"><code class="language-none">输入一行两个整数 M 和 N，空格分开（0&lt;M,N&lt;500）,分别表示A、B的人数，保证人数合理性。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>输出</p></blockquote><pre class="line-numbers language-none"><code class="language-none">要求输出一个整数，表示可以产生的花样种数。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>样例输入</p></blockquote><pre class="line-numbers language-none"><code class="language-none">1 2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>样例输出</p></blockquote><pre class="line-numbers language-none"><code class="language-none">3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>代码(注释解析)</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> 蓝桥杯<span class="token number">2016</span>机器人塔 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> numa<span class="token punctuation">,</span>numb<span class="token punctuation">;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        numa <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        numb <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> num <span class="token operator">=</span> numa<span class="token operator">+</span>numb<span class="token punctuation">;</span>        <span class="token comment">//最后一行数量</span>        <span class="token keyword">int</span> lastlength <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span><span class="token number">8</span><span class="token operator">*</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>        <span class="token comment">//从最后一行开始往前推进</span>        <span class="token comment">//A=0;B=1</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ab <span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token function">dfs</span><span class="token punctuation">(</span>lastlength<span class="token punctuation">,</span> numa<span class="token punctuation">,</span> numb<span class="token punctuation">,</span> ab<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> dlist <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//对最后一行进行排列组合</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> lastlength<span class="token punctuation">,</span><span class="token keyword">int</span> numa<span class="token punctuation">,</span><span class="token keyword">int</span> numb<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ab<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>dlist<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>lastlength<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token comment">//对每种情况进行判断</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>dlist<span class="token punctuation">,</span> numa<span class="token punctuation">,</span> numb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>ab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            dlist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>ab<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">dfs</span><span class="token punctuation">(</span>lastlength<span class="token punctuation">,</span> numa<span class="token punctuation">,</span> numb<span class="token punctuation">,</span> ab<span class="token punctuation">)</span><span class="token punctuation">;</span>            dlist<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>dlist<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>    <span class="token comment">//判断在该末行情况下所唯一确定的机器人塔所用的a的数量和b的数量是否合规</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Boolean</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> mylist<span class="token punctuation">,</span><span class="token keyword">int</span> cura <span class="token punctuation">,</span><span class="token keyword">int</span> curb<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>mylist<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>cura<span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span>curb<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>mylist<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>cura<span class="token operator">!=</span><span class="token number">0</span><span class="token operator">||</span>curb<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> mya<span class="token operator">=</span>cura<span class="token punctuation">;</span>        <span class="token keyword">int</span> myb<span class="token operator">=</span>curb<span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">:</span>mylist<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                mya<span class="token operator">-=</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                myb<span class="token operator">-=</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>mylist<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>mylist<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">==</span>mylist<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token function">check</span><span class="token punctuation">(</span>list<span class="token punctuation">,</span> mya<span class="token punctuation">,</span> myb<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第四题-广场舞"><a href="#第四题-广场舞" class="headerlink" title="第四题 广场舞"></a>第四题 广场舞</h2><blockquote><p>题目描述</p></blockquote><pre class="line-numbers language-none"><code class="language-none">LQ市的市民广场是一个多边形，广场上铺满了大理石的地板砖。地板砖铺得方方正正，就像坐标轴纸一样。以某四块砖相接的点为原点，地板砖的两条边为两个正方向，一块砖的边长为横纵坐标的单位长度，则所有横纵坐标都为整数的点都是四块砖的交点（如果在广场内）。广场的砖单调无趣，却给跳广场舞的市民们提供了绝佳的参照物。每天傍晚，都会有大批市民前来跳舞。舞者每次都会选一块完整的砖来跳舞，两个人不会选择同一块砖，如果一块砖在广场边上导致缺角或者边不完整，则没人会选这块砖。（广场形状的例子参考下图）现在，告诉你广场的形状，请帮LQ市的市长计算一下，同一时刻最多有多少市民可以在广场跳舞。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/lanqiao_6.png" alt="img"></p><blockquote><p>输入格式</p></blockquote><pre class="line-numbers language-none"><code class="language-none">输入的第一行包含一个整数n，表示广场是n边形的（因此有n个顶点）。接下来n行，每行两个整数，依次表示n边形每个顶点的坐标（也就是说广场边缘拐弯的地方都在砖的顶角上。数据保证广场是一个简单多边形。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>输出格式</p></blockquote><pre class="line-numbers language-none"><code class="language-none">输出一个整数，表示最多有多少市民可以在广场跳舞。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>输入样例</p></blockquote><pre class="line-numbers language-none"><code class="language-none">53 36 44 11 -10 4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>输出样例</p></blockquote><pre class="line-numbers language-none"><code class="language-none">7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>思路</p></blockquote><pre class="line-numbers language-none"><code class="language-none">通过四个极值可以判断出大致的遍历范围关键是如何判断点是否在多边形内部这里是采用射线法奇数交点为内部偶数交点为外部还要考虑边界条件，射线过顶点以及点在边界上等等。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>代码（我的代码只能通过百分之五十的测试样例，然后就超内存了（&#x3D; 。&#x3D;）</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> 蓝桥杯<span class="token number">2016</span>广场舞 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> <span class="token class-name">N</span><span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">></span></span> mylist <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token class-name">N</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            mylist<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>sc<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> xmax<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> xmin<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> ymax<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> ymin<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Node</span> node<span class="token operator">:</span>mylist<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>x<span class="token operator">></span>xmax<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                xmax<span class="token operator">=</span>node<span class="token punctuation">.</span>x<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>x<span class="token operator">&lt;</span>xmin<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                xmin<span class="token operator">=</span>node<span class="token punctuation">.</span>x<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>y<span class="token operator">></span>ymax<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                ymax<span class="token operator">=</span>node<span class="token punctuation">.</span>y<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>y<span class="token operator">&lt;</span>ymin<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                ymin<span class="token operator">=</span>node<span class="token punctuation">.</span>y<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>       <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ArrayList</span><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">></span><span class="token punctuation">></span></span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>ymax<span class="token punctuation">;</span>j<span class="token operator">>=</span>ymin<span class="token punctuation">;</span>j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">></span></span> newList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>xmin<span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>xmax<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                newList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            graph<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>newList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>graph<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>graph<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>mylist<span class="token punctuation">,</span> graph<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">check</span><span class="token punctuation">(</span>mylist<span class="token punctuation">,</span> graph<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">check</span><span class="token punctuation">(</span>mylist<span class="token punctuation">,</span> graph<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">check</span><span class="token punctuation">(</span>mylist<span class="token punctuation">,</span> graph<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//射线看奇偶</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Boolean</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Node</span><span class="token punctuation">></span></span> myList<span class="token punctuation">,</span><span class="token class-name">Node</span> testNode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Boolean</span> jiaodian <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>myList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> x1<span class="token operator">=</span>myList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span>            <span class="token keyword">int</span> x2<span class="token operator">=</span>myList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span>            <span class="token keyword">int</span> y1<span class="token operator">=</span>myList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>            <span class="token keyword">int</span> y2<span class="token operator">=</span>myList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span>myList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             x2<span class="token operator">=</span>myList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span>             y2<span class="token operator">=</span>myList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">//多种情况</span>            <span class="token comment">//点在边界上</span>            <span class="token comment">//射线过端点</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y2<span class="token operator">-</span>testNode<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>testNode<span class="token punctuation">.</span>x<span class="token operator">-</span>x1<span class="token punctuation">)</span><span class="token operator">==</span><span class="token punctuation">(</span>testNode<span class="token punctuation">.</span>y<span class="token operator">-</span>y1<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>x2<span class="token operator">-</span>testNode<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>testNode<span class="token punctuation">.</span>y<span class="token operator">&lt;=</span>y1<span class="token operator">&amp;&amp;</span>testNode<span class="token punctuation">.</span>y<span class="token operator">>=</span>y2<span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span>testNode<span class="token punctuation">.</span>y<span class="token operator">>=</span>y1<span class="token operator">&amp;&amp;</span>testNode<span class="token punctuation">.</span>y<span class="token operator">&lt;=</span>y2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">// System.out.println(testNode.x+" "+testNode.y);</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>y1<span class="token operator">&lt;</span>testNode<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token punctuation">(</span>y2<span class="token operator">&lt;</span>testNode<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span><span class="token punctuation">(</span>testNode<span class="token punctuation">.</span>y<span class="token operator">-</span>y1<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>x2<span class="token operator">-</span>x1<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>y2<span class="token operator">-</span>y1<span class="token punctuation">)</span><span class="token operator">+</span>x1<span class="token operator">></span>testNode<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                jiaodian<span class="token operator">=</span><span class="token operator">!</span>jiaodian<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> jiaodian<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> x<span class="token punctuation">,</span>y<span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝桥杯2015国赛javaB组题目详解</title>
      <link href="/2022/053649740b.html"/>
      <url>/2022/053649740b.html</url>
      
        <content type="html"><![CDATA[<h1 id="蓝桥杯2015国赛javaB组题目详解"><a href="#蓝桥杯2015国赛javaB组题目详解" class="headerlink" title="蓝桥杯2015国赛javaB组题目详解"></a>蓝桥杯2015国赛javaB组题目详解</h1></br><h2 id="第一题-积分之谜"><a href="#第一题-积分之谜" class="headerlink" title="第一题 积分之谜"></a>第一题 积分之谜</h2><p>题目描述：  </p><pre class="line-numbers language-java" data-language="java"><code class="language-java">小明开了个网上商店，卖风铃。共有<span class="token number">3</span>个品牌：<span class="token class-name">A</span>，<span class="token class-name">B</span>，<span class="token class-name">C</span>。    为了促销，每件商品都会返固定的积分。  小明开业第一天收到了三笔订单：  第一笔：<span class="token number">3</span>个<span class="token class-name">A</span> <span class="token operator">+</span> <span class="token number">7</span>个<span class="token class-name">B</span> <span class="token operator">+</span> <span class="token number">1</span>个<span class="token class-name">C</span>，共返积分：<span class="token number">315</span>  第二笔：<span class="token number">4</span>个<span class="token class-name">A</span> <span class="token operator">+</span> <span class="token number">10</span>个<span class="token class-name">B</span> <span class="token operator">+</span> <span class="token number">1</span>个<span class="token class-name">C</span>，共返积分：<span class="token number">420</span>  第三笔：<span class="token class-name">A</span> <span class="token operator">+</span> <span class="token class-name">B</span> <span class="token operator">+</span> <span class="token class-name">C</span>，共返积分<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    你能算出第三笔订单需要返积分多少吗？<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解析：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">3</span>a<span class="token operator">+</span><span class="token number">7</span>b<span class="token operator">+</span>c<span class="token operator">=</span><span class="token number">315</span><span class="token number">4</span>a<span class="token operator">+</span><span class="token number">10</span>b<span class="token operator">+</span>c<span class="token operator">=</span><span class="token number">420</span>可以解出a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">=</span><span class="token number">105</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="第二题-完美正方形"><a href="#第二题-完美正方形" class="headerlink" title="第二题 完美正方形"></a>第二题 完美正方形</h2><p>题目描述：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">如果一些边长互不相同的正方形，可以恰好拼出一个更大的正方形，   则称其为完美正方形。历史上，人们花了很久才找到了若干完美正方形。比如：如下边长的<span class="token number">22</span>个正方形<span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">12</span> <span class="token number">13</span> <span class="token number">14</span> <span class="token number">15</span> <span class="token number">16</span> <span class="token number">17</span> <span class="token number">18</span> <span class="token number">21</span> <span class="token number">22</span> <span class="token number">23</span> <span class="token number">24</span> <span class="token number">26</span><span class="token number">27</span> <span class="token number">28</span> <span class="token number">50</span> <span class="token number">60</span>如下图img<span class="token operator">-</span><span class="token number">1</span>那样组合，就是一种解法。此时，紧贴上边沿的是：<span class="token number">60</span> <span class="token number">50</span>紧贴下边沿的是：<span class="token number">26</span> <span class="token number">28</span> <span class="token number">17</span> <span class="token number">21</span> <span class="token number">18</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/../images/lanqiaobei_5.png" alt="img-1"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token number">22</span>阶完美正方形一共有<span class="token number">8</span>种。下面的组合是另一种：<span class="token number">2</span> <span class="token number">5</span> <span class="token number">9</span> <span class="token number">11</span> <span class="token number">16</span> <span class="token number">17</span> <span class="token number">19</span> <span class="token number">21</span> <span class="token number">22</span> <span class="token number">24</span> <span class="token number">26</span> <span class="token number">30</span> <span class="token number">31</span> <span class="token number">33</span> <span class="token number">35</span> <span class="token number">36</span> <span class="token number">41</span> <span class="token number">46</span> <span class="token number">47</span> <span class="token number">50</span> <span class="token number">52</span> <span class="token number">61</span>如果告诉你该方案紧贴着上边沿的是从左到右依次为：<span class="token number">47</span> <span class="token number">46</span> <span class="token number">61</span>你能计算出紧贴着下边沿的是哪几个正方形吗？<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>解析：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Stack</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> 蓝桥杯<span class="token number">2015</span>完美正方形 <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Node</span><span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> x <span class="token punctuation">;</span>        <span class="token keyword">int</span> y <span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token class-name">Node</span><span class="token punctuation">(</span><span class="token keyword">int</span> x <span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> <span class="token class-name">N</span><span class="token operator">=</span><span class="token number">154</span><span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">//正方形块数组</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> number <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">31</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">//init</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">154</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span><span class="token number">46</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                graph<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">47</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            graph<span class="token punctuation">[</span><span class="token number">47</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">47</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">61</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">94</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span><span class="token number">154</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                graph<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//开始dfs</span>        <span class="token function">select</span><span class="token punctuation">(</span>graph<span class="token punctuation">,</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span>  <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> stack <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Stack</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span>  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">select</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> number<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>number<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stack<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>           <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>n<span class="token operator">&lt;</span>number<span class="token punctuation">.</span>length<span class="token punctuation">;</span>n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//先找到可以插入的点</span>    <span class="token class-name">Node</span> myNode <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>graph<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>myNode<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>stack<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>number<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span> <span class="token function">yvejie</span><span class="token punctuation">(</span>graph<span class="token punctuation">,</span> myNode<span class="token punctuation">.</span>x<span class="token punctuation">,</span> myNode<span class="token punctuation">.</span>y<span class="token punctuation">,</span> number<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>number<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//记录路径</span>                path<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"("</span><span class="token operator">+</span>myNode<span class="token punctuation">.</span>x<span class="token operator">+</span><span class="token string">","</span><span class="token operator">+</span>myNode<span class="token punctuation">.</span>y<span class="token operator">+</span><span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//graph填充</span>                <span class="token function">tianchong</span><span class="token punctuation">(</span>myNode<span class="token punctuation">.</span>x<span class="token punctuation">,</span> myNode<span class="token punctuation">.</span>y<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> number<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//寻找下一个</span>                <span class="token function">select</span><span class="token punctuation">(</span>graph<span class="token punctuation">,</span> number<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//无果出栈</span>                stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//清除之前错误的填充</span>                <span class="token function">qingchu</span><span class="token punctuation">(</span>myNode<span class="token punctuation">.</span>x<span class="token punctuation">,</span> myNode<span class="token punctuation">.</span>y<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> number<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//清除之前错误的路径</span>                path<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//找到可以插入的NODE</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Node</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>graph<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>graph<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//判断是否越界</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Boolean</span> <span class="token function">yvejie</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph<span class="token punctuation">,</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">,</span><span class="token keyword">int</span> number<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>number<span class="token operator">></span>graph<span class="token punctuation">.</span>length<span class="token operator">-</span>x<span class="token operator">||</span>number<span class="token operator">></span>graph<span class="token punctuation">.</span>length<span class="token operator">-</span>y<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token operator">=</span>x<span class="token punctuation">;</span>m<span class="token operator">&lt;</span>x<span class="token operator">+</span>number<span class="token punctuation">;</span>m<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token operator">=</span>y<span class="token punctuation">;</span>n<span class="token operator">&lt;</span>y<span class="token operator">+</span>number<span class="token punctuation">;</span>n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//对可行区域进行填充</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">tianchong</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph<span class="token punctuation">,</span><span class="token keyword">int</span> number<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token operator">=</span>x<span class="token punctuation">;</span>m<span class="token operator">&lt;</span>x<span class="token operator">+</span>number<span class="token punctuation">;</span>m<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token operator">=</span>y<span class="token punctuation">;</span>n<span class="token operator">&lt;</span>y<span class="token operator">+</span>number<span class="token punctuation">;</span>n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                graph<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//对尝试过的不可行区域的填充进行一个撤销</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">qingchu</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> graph<span class="token punctuation">,</span><span class="token keyword">int</span> number<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> m<span class="token operator">=</span>x<span class="token punctuation">;</span>m<span class="token operator">&lt;</span>x<span class="token operator">+</span>number<span class="token punctuation">;</span>m<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token operator">=</span>y<span class="token punctuation">;</span>n<span class="token operator">&lt;</span>y<span class="token operator">+</span>number<span class="token punctuation">;</span>n<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                graph<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">注释写的很清楚了其实还可以优化一下，就是可以对正方形块进行一个排序  然后只要小的都越界大的就不用看了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>具体操作为：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">对排序过后的number数组进行遍历  在判断是否越界的<span class="token keyword">if</span>的后面添加一个<span class="token keyword">else</span>  加入<span class="token keyword">return</span>就行了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">要想输出结果更加直观可以考虑path记录四个点的左边而不是一个  最后就很容易找到最下面的正方形<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="第三题-密文搜索"><a href="#第三题-密文搜索" class="headerlink" title="第三题 密文搜索"></a>第三题 密文搜索</h2><p>题目描述</p><pre class="line-numbers language-none"><code class="language-none">福尔摩斯从X星收到一份资料，全部是小写字母组成。他的助手提供了另一份资料：许多长度为8的密码列表。福尔摩斯发现，这些密码是被打乱后隐藏在先前那份资料中的。请你编写一个程序，从第一份资料中搜索可能隐藏密码的位置。要考虑密码的所有排列可能性。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></br><p>输入格式</p><pre class="line-numbers language-none"><code class="language-none">输入第一行：一个字符串s，全部由小写字母组成，长度小于1024*1024紧接着一行是一个整数n,表示以下有n行密码，1&lt;&#x3D;n&lt;&#x3D;1000紧接着是n行字符串，都是小写字母组成，长度都为8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></br><p>输出格式</p><pre class="line-numbers language-none"><code class="language-none">一个整数, 表示每行密码的所有排列在s中匹配次数的总和。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>输入样例</p><pre class="line-numbers language-none"><code class="language-none">aaaabbbbaabbcccc2aaaabbbbabcabccc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>输出样例</p><pre class="line-numbers language-none"><code class="language-none">4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>数据范围与提示</p><pre class="line-numbers language-none"><code class="language-none">第一个密码匹配了3次，第二个密码匹配了1次，一共4次。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>思路步骤</p><ul><li>对字符串s进行处理从头到尾每8位截取一段，每段按照ASSIC从小到大排序后保存</li><li>对每一个密码串按照ASSIC从小到大排序</li><li>遍历比较</li></ul></blockquote><p>代码实现</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> 蓝桥杯<span class="token number">2015</span>密文搜索 <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Scanner</span> sc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> str <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> sc<span class="token punctuation">.</span> <span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token class-name">N</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> mymid <span class="token operator">=</span> sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//转数组排序</span>            <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>mymid<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//转字符串保存</span>            s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>mymid<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        sc<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">></span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> flag<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">//字符串切割</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token operator">+</span><span class="token number">7</span><span class="token operator">></span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>flag<span class="token operator">+</span><span class="token number">7</span><span class="token operator">&lt;=</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//substring包前不包后</span>                <span class="token class-name">String</span> mysb <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span> flag<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> mych <span class="token operator">=</span> mysb<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>mych<span class="token punctuation">)</span><span class="token punctuation">;</span>                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>mych<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            flag<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> st<span class="token operator">:</span>map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> mima<span class="token operator">:</span>s<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token comment">//记得用equals</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>st<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>mima<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    count<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 蓝桥杯 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Handler基本使用</title>
      <link href="/2022/036f8f0f24.html"/>
      <url>/2022/036f8f0f24.html</url>
      
        <content type="html"><![CDATA[<h3 id="Handler的基本使用"><a href="#Handler的基本使用" class="headerlink" title="Handler的基本使用"></a>Handler的基本使用</h3><p>kotlin代码</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">val</span> mHandler <span class="token operator">=</span> <span class="token function">Handler</span><span class="token punctuation">(</span>Looper<span class="token punctuation">.</span><span class="token function">getMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> msg <span class="token operator">-></span>    <span class="token function">println</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>what<span class="token punctuation">)</span>    <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后在工作线程中将相关信息通过sendMessage( )发送给handler<br>让handler在主线程中进行UI的相关更新操作</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token function">Thread</span><span class="token punctuation">(</span>Runnable <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> i <span class="token operator">=</span><span class="token number">1</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>i<span class="token operator">&lt;</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">val</span> message <span class="token operator">=</span> <span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        message<span class="token punctuation">.</span>what <span class="token operator">=</span> i<span class="token operator">++</span>        mHandler<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其实handler实现对收到的message进行处理还有一种方式,重写handler的handleMessage方法</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">class</span>  HandlerClass <span class="token operator">:</span><span class="token function">Handler</span><span class="token punctuation">(</span>Looper<span class="token punctuation">.</span><span class="token function">getMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>msg<span class="token operator">:</span> Message<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">handleMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>         <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"handleMessage"</span></span><span class="token operator">+</span>msg<span class="token punctuation">.</span>what<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="源码解析"><a href="#源码解析" class="headerlink" title="源码解析"></a>源码解析</h3><p>那么这跟上面那种实现Handler.Callback 的形式有什么不同呢，为了方便观察，我们把第一种写的更清晰一点</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">val</span> mHandler <span class="token operator">=</span> <span class="token function">Handler</span><span class="token punctuation">(</span>Looper<span class="token punctuation">.</span><span class="token function">getMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">object</span> <span class="token operator">:</span>Handler<span class="token punctuation">.</span><span class="token function">Callback</span><span class="token punctuation">&#123;</span>    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span>msg<span class="token operator">:</span> Message<span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">&#123;</span>        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">"Callback"</span></span><span class="token operator">+</span>msg<span class="token punctuation">.</span>what<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>两个不同点：<br>一个是重写了Handler类中的handleMessage方法一个是重写了Handler.Callbac接口的handleMessage方法 。<br>实现接口的方式有一个布尔类型的返回值，那么这个返回值的作用是什么呢 我们可以看看源码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dispatchMessage</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">Message</span> msg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>msg<span class="token punctuation">.</span>callback <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">handleCallback</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>mCallback <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>mCallback<span class="token punctuation">.</span><span class="token function">handleMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">handleMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>mCallback.handleMessage(msg) 告诉我们 再分发message的时候如果返回值为true便只执行接口中重写的handleMessage方法而不去执行Handler类中的handleMessage方法只有当返回值为false的时候才会先后执行这两个方法。<br>那么又有一个问题引发了我们的思考，在第二三行中比他们优先级更高的方法是什么呢。其实这涉及到了handler的另一种使用方式Handler.post( ) 先上代码</p><pre class="line-numbers language-kotlin" data-language="kotlin"><code class="language-kotlin"><span class="token keyword">val</span> mHandler <span class="token operator">=</span> <span class="token function">Handler</span><span class="token punctuation">(</span>Looper<span class="token punctuation">.</span><span class="token function">getMainLooper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">//先得到handler的一个实例</span><span class="token comment">//然后在子线程中进行一个ui更新的post</span>       Thread<span class="token punctuation">&#123;</span>            mHandler<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>Runnable <span class="token punctuation">&#123;</span>                 mText<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">"mHandler.post"</span></span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们这里通过post方法传进了一个Runnable的实例，它会在后面被赋值给内部新获取的一个message实例的callback成员变量</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Message</span> <span class="token function">getPostMessage</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> r<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Message</span> m <span class="token operator">=</span> <span class="token class-name">Message</span><span class="token punctuation">.</span><span class="token function">obtain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    m<span class="token punctuation">.</span>callback <span class="token operator">=</span> r<span class="token punctuation">;</span>    <span class="token keyword">return</span> m<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>而这个成员变量就是我们上面分发信息中的 msg.callback，这样一下子就豁然开朗了。<br>其实像我们可能是用的很多的view.post其实也是调用了handler.post方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">post</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> action<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">final</span> <span class="token class-name">AttachInfo</span> attachInfo <span class="token operator">=</span> mAttachInfo<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>attachInfo <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> attachInfo<span class="token punctuation">.</span>mHandler<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// Postpone the runnable until we know on which thread it needs to run.</span>    <span class="token comment">// Assume that the runnable will be successfully placed after attach.</span>    <span class="token function">getRunQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以说还是得多看看源码啊。</p>]]></content>
      
      
      <categories>
          
          <category> android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> android </tag>
            
            <tag> Handler </tag>
            
            <tag> kotlin </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
